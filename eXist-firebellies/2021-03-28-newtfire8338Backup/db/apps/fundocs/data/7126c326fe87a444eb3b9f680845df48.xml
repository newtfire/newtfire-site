<xqdoc:xqdoc xmlns:xqdoc="http://www.xqdoc.org/1.0"><xqdoc:control><xqdoc:date>2020-11-06T23:08:02.38Z</xqdoc:date><xqdoc:location>/db/system/repo/semver-xq-2.2.1/content/semver.xq</xqdoc:location></xqdoc:control><xqdoc:module type="library"><xqdoc:uri>http://exist-db.org/xquery/semver</xqdoc:uri><xqdoc:name>semver</xqdoc:name><xqdoc:comment><xqdoc:description>Validate, compare, sort, parse, and serialize Semantic Versioning (SemVer)
  2.0.0 version strings, using XQuery.

  SemVer rules are applied strictly, raising errors when version strings do
  not conform to the spec.</xqdoc:description><xqdoc:version> 2.1.0
  </xqdoc:version><xqdoc:author> Joe Wicentowski
  </xqdoc:author></xqdoc:comment></xqdoc:module><xqdoc:functions><xqdoc:function><xqdoc:name>semver:coerce</xqdoc:name><xqdoc:signature>semver:coerce($version as xs:string?) as map(*)</xqdoc:signature><xqdoc:comment><xqdoc:description>Coerce a non-SemVer version string into SemVer version string and parse it as such</xqdoc:description><xqdoc:param>$version? </xqdoc:param><xqdoc:return>map(*) : A map containing analysis of the parsed version, containing entries for each identifier ("major", "minor", "patch", "pre-release", and "build-metadata"), and an "identifiers" entry with all identifiers in an array.</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>semver:compare</xqdoc:name><xqdoc:signature>semver:compare($v1 as xs:string, $v2 as xs:string) as xs:integer</xqdoc:signature><xqdoc:comment><xqdoc:description>Compare two versions (strictly)</xqdoc:description><xqdoc:param>$v1 </xqdoc:param><xqdoc:param>$v2 </xqdoc:param><xqdoc:return>xs:integer : -1 if v1 &lt; v2, 0 if v1 = v2, or 1 if v1 &gt; v2.</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>semver:compare</xqdoc:name><xqdoc:signature>semver:compare($v1 as xs:string, $v2 as xs:string, $coerce as xs:boolean) as xs:integer</xqdoc:signature><xqdoc:comment><xqdoc:description>Compare two versions (with an option to coerce invalid SemVer strings)</xqdoc:description><xqdoc:param>$v1 </xqdoc:param><xqdoc:param>$v2 </xqdoc:param><xqdoc:param>$coerce </xqdoc:param><xqdoc:return>xs:integer : -1 if v1 &lt; v2, 0 if v1 = v2, or 1 if v1 &gt; v2.</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>semver:eq</xqdoc:name><xqdoc:signature>semver:eq($v1 as xs:string, $v2 as xs:string) as xs:boolean</xqdoc:signature><xqdoc:comment><xqdoc:description>Test if v1 is equal to v2</xqdoc:description><xqdoc:param>$v1 </xqdoc:param><xqdoc:param>$v2 </xqdoc:param><xqdoc:return>xs:boolean : true if v1 is equal to v2</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>semver:ge</xqdoc:name><xqdoc:signature>semver:ge($v1 as xs:string, $v2 as xs:string) as xs:boolean</xqdoc:signature><xqdoc:comment><xqdoc:description>Test if v1 is the same or higher version than v2 (strictly)</xqdoc:description><xqdoc:param>$v1 </xqdoc:param><xqdoc:param>$v2 </xqdoc:param><xqdoc:return>xs:boolean : true if v1 is greater than or equal to v2</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>semver:ge</xqdoc:name><xqdoc:signature>semver:ge($v1 as xs:string, $v2 as xs:string, $coerce as xs:boolean) as xs:boolean</xqdoc:signature><xqdoc:comment><xqdoc:description>Test if v1 is the same or higher version than v2</xqdoc:description><xqdoc:param>$v1 </xqdoc:param><xqdoc:param>$v2 </xqdoc:param><xqdoc:param>$coerce </xqdoc:param><xqdoc:return>xs:boolean : true if v1 is greater than or equal to v2</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>semver:gt</xqdoc:name><xqdoc:signature>semver:gt($v1 as xs:string, $v2 as xs:string) as xs:boolean</xqdoc:signature><xqdoc:comment><xqdoc:description>Test if v1 is a higher version than v2 (strictly)</xqdoc:description><xqdoc:param>$v1 </xqdoc:param><xqdoc:param>$v2 </xqdoc:param><xqdoc:return>xs:boolean : true if v1 is greater than v2</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>semver:gt</xqdoc:name><xqdoc:signature>semver:gt($v1 as xs:string, $v2 as xs:string, $coerce as xs:boolean) as xs:boolean</xqdoc:signature><xqdoc:comment><xqdoc:description>Test if v1 is a higher version than v2 (with an option to coerce invalid SemVer strings)</xqdoc:description><xqdoc:param>$v1 </xqdoc:param><xqdoc:param>$v2 </xqdoc:param><xqdoc:param>$coerce </xqdoc:param><xqdoc:return>xs:boolean : true if v1 is greater than v2</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>semver:le</xqdoc:name><xqdoc:signature>semver:le($v1 as xs:string, $v2 as xs:string) as xs:boolean</xqdoc:signature><xqdoc:comment><xqdoc:description>Test if v1 is a lower version or the same version as v2 (strictly)</xqdoc:description><xqdoc:param>$v1 </xqdoc:param><xqdoc:param>$v2 </xqdoc:param><xqdoc:return>xs:boolean : true if v1 is less than or equal to v2</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>semver:le</xqdoc:name><xqdoc:signature>semver:le($v1 as xs:string, $v2 as xs:string, $coerce as xs:boolean) as xs:boolean</xqdoc:signature><xqdoc:comment><xqdoc:description>Test if v1 is a lower version or the same version as v2 (with an option to coerce invalid SemVer strings)</xqdoc:description><xqdoc:param>$v1 </xqdoc:param><xqdoc:param>$v2 </xqdoc:param><xqdoc:param>$coerce </xqdoc:param><xqdoc:return>xs:boolean : true if v1 is less than or equal to v2</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>semver:lt</xqdoc:name><xqdoc:signature>semver:lt($v1 as xs:string, $v2 as xs:string) as xs:boolean</xqdoc:signature><xqdoc:comment><xqdoc:description>Test if v1 is a lower version than v2 (strictly)</xqdoc:description><xqdoc:param>$v1 </xqdoc:param><xqdoc:param>$v2 </xqdoc:param><xqdoc:return>xs:boolean : true if v1 is less than v2</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>semver:lt</xqdoc:name><xqdoc:signature>semver:lt($v1 as xs:string, $v2 as xs:string, $coerce as xs:boolean) as xs:boolean</xqdoc:signature><xqdoc:comment><xqdoc:description>Test if v1 is a lower version than v2 (with an option to coerce invalid SemVer strings)</xqdoc:description><xqdoc:param>$v1 </xqdoc:param><xqdoc:param>$v2 </xqdoc:param><xqdoc:param>$coerce </xqdoc:param><xqdoc:return>xs:boolean : true if v1 is less than v2</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>semver:ne</xqdoc:name><xqdoc:signature>semver:ne($v1 as xs:string, $v2 as xs:string) as xs:boolean</xqdoc:signature><xqdoc:comment><xqdoc:description>Test if v1 is not equal to v2 (strictly)</xqdoc:description><xqdoc:param>$v1 </xqdoc:param><xqdoc:param>$v2 </xqdoc:param><xqdoc:return>xs:boolean : true if v1 is not equal to v2</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>semver:ne</xqdoc:name><xqdoc:signature>semver:ne($v1 as xs:string, $v2 as xs:string, $coerce as xs:boolean) as xs:boolean</xqdoc:signature><xqdoc:comment><xqdoc:description>Test if v1 is not equal to v2 (with an option to coerce invalid SemVer strings)</xqdoc:description><xqdoc:param>$v1 </xqdoc:param><xqdoc:param>$v2 </xqdoc:param><xqdoc:param>$coerce </xqdoc:param><xqdoc:return>xs:boolean : true if v1 is not equal to v2</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>semver:parse</xqdoc:name><xqdoc:signature>semver:parse($version as xs:string) as map(*)</xqdoc:signature><xqdoc:comment><xqdoc:description>Parse a SemVer version string (strictly)</xqdoc:description><xqdoc:param>$version </xqdoc:param><xqdoc:return>map(*) : A map containing analysis of the parsed version, containing entries for each identifier ("major", "minor", "patch", "pre-release", and "build-metadata"), and an "identifiers" entry with all identifiers in an array.</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>semver:parse</xqdoc:name><xqdoc:signature>semver:parse($version as xs:string, $coerce as xs:boolean) as map(*)</xqdoc:signature><xqdoc:comment><xqdoc:description>Parse a SemVer version string (with an option to coerce invalid SemVer strings)</xqdoc:description><xqdoc:param>$version </xqdoc:param><xqdoc:param>$coerce </xqdoc:param><xqdoc:return>map(*) : A map containing analysis of the parsed version, containing entries for each identifier ("major", "minor", "patch", "pre-release", and "build-metadata"), and an "identifiers" entry with all identifiers in an array.</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>semver:serialize</xqdoc:name><xqdoc:signature>semver:serialize($version as map(*)) as item()*</xqdoc:signature><xqdoc:comment><xqdoc:description>Serialize a parsed SemVer string</xqdoc:description><xqdoc:param>$version </xqdoc:param><xqdoc:return>item()* : A SemVer string</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>semver:serialize</xqdoc:name><xqdoc:signature>semver:serialize($major as xs:integer, $minor as xs:integer, $patch as xs:integer, $pre-release as xs:anyAtomicType*, $build-metadata as xs:anyAtomicType*) as item()*</xqdoc:signature><xqdoc:comment><xqdoc:description>Serialize a SemVer string</xqdoc:description><xqdoc:param>$major </xqdoc:param><xqdoc:param>$minor </xqdoc:param><xqdoc:param>$patch </xqdoc:param><xqdoc:param>$pre-release* </xqdoc:param><xqdoc:param>$build-metadata* </xqdoc:param><xqdoc:return>item()* : A SemVer string</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>semver:sort</xqdoc:name><xqdoc:signature>semver:sort($versions as xs:string+) as xs:string+</xqdoc:signature><xqdoc:comment><xqdoc:description>Sort SemVer strings (strictly)</xqdoc:description><xqdoc:param>$versions+ </xqdoc:param><xqdoc:return>xs:string+ : A sequence of sorted version strings</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>semver:sort</xqdoc:name><xqdoc:signature>semver:sort($versions as xs:string+, $coerce as xs:boolean) as xs:string+</xqdoc:signature><xqdoc:comment><xqdoc:description>Sort SemVer strings (with an option to coerce invalid SemVer strings)</xqdoc:description><xqdoc:param>$versions+ </xqdoc:param><xqdoc:param>$coerce </xqdoc:param><xqdoc:return>xs:string+ : A sequence of sorted version strings</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>semver:validate</xqdoc:name><xqdoc:signature>semver:validate($version as xs:string) as xs:boolean</xqdoc:signature><xqdoc:comment><xqdoc:description>Validate whether a SemVer string conforms to the spec</xqdoc:description><xqdoc:param>$version </xqdoc:param><xqdoc:return>xs:boolean : True if the version is valid, false if not</xqdoc:return></xqdoc:comment></xqdoc:function></xqdoc:functions></xqdoc:xqdoc>