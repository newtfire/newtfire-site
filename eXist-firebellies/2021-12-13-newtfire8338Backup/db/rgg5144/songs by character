xquery version "3.1";
<html>
    <head><title>Songs and Performers</title></head>
    <body>
    <h1>Composers and Songs in the Disney Songs Collection</h1>
    
    <table>
        <tr><th>No.</th><th>Film</th><th>Performers</th><th>Character</th></tr>
    {
    let $disneySongs := collection('/db/disneySongs/')
    let $title := $disneySongs//title ! normalize-space() => distinct-values() => sort()
     for $c at $pos in $title
     let $cTitles := $disneySongs[.//metadata ! normalize-space() = $c]//title ! normalize-space() => distinct-values() => sort() => string-join(', ')
     let $cFilm := $disneySongs[.//title ! normalize-space() = $c]//movie ! normalize-space() => distinct-values() => sort() => string-join(', ')
     let $cPerform := $disneySongs[.//title ! normalize-space() = $c]//voiceActor ! normalize-space() => distinct-values() => sort() => string-join(', ')
     let $cCharacter := $disneySongs[.//title ! normalize-space() = $c]//perform ! normalize-space() => distinct-values() => sort() => string-join(', ')
     
    return 
        
        <tr>
         <td>{$pos}</td><td>{$c}</td><td>{$cFilm}</td><td>{$cPerform}</td><td>{$cCharacter}</td>
        </tr>
   }
   </table>
   (: There is a lot of potential for what can be done here. I chose to associate each song with its film, provide the singer for each, and what character they play. I'm not sure if what I did is considered a "forloop", but I tried my best :)
</body>
</html>