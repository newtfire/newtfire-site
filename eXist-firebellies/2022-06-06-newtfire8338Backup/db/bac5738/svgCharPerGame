xquery version "3.1";
{let $smashcoll := doc('/db/smashtiers/supersmashtierlist.xml')/*
let $char := $smashcoll//char
for $c in $char
(: ebb: I'm starting the return way up here because we absolutely want one table row for each character! :)
return 
<tr>
    <td>{$c/text()}</td>
    <!--ebb: NOW we need to loop over those games to get each of the other <td> rows for each game -->
    {let $game := $c//game/@n ! string() => sort()
     for $g in $game
     let $tier := $c//game[@n = $g]/@tier ! string()
      return
      <td>{$tier}</td>
  
 <g alignment-baseline="baseline">
        
 declare variable $ThisFileContent := 
<svg width="500" height="2000">
  <line x1="0" y1="300" x2="0" y2="0" stroke="black" stroke-width="5"/>
       
<line x1="0" y1="250" x2="700" y2="2" stroke="black" stroke-width="5"/>
        
        <rect fill='red' x='0' y='40' width='{(Count $game1)} ' height='20'/><text x='{(Count $game1 + 1)}' y='40'>Game 1</text>
        
        <rect fill='blue' x='0' y='80' width='{(Count $game2)} ' height='20'/> <text x='{(Count $game2 + 1)}'  y='80'>Game 2</text>
        
        <rect fill='green' x='0' y='120' width='{(Count $game3)} ' height='20'/> <text  x='{(Count $game3 + 1)}' y='120'>Game 3</text>
        
        <rect fill='yellow' x='0' y='160' width='{(Count $game4)} ' height='20'/> <text  x='{(Count $game4 + 1)}' y='160'>Game 4</text>
        
        <rect fill='purple' x='0' y="200" width='{(Count $game5)}' height='20'/> <text  x='{(Count $game5 + 1)}' y='200'>Game5</text>
    </g>
</svg>;
  