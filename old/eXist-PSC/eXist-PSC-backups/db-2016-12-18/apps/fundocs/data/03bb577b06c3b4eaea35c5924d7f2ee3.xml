<?xml version="1.0" encoding="UTF-8"?>
<xqdoc:xqdoc xmlns:xqdoc="http://www.xqdoc.org/1.0"><xqdoc:control><xqdoc:date>2015-05-06T12:07:02.066-04:00</xqdoc:date><xqdoc:location>java:org.exist.xquery.modules.compression.CompressionModule</xqdoc:location></xqdoc:control><xqdoc:module type="library"><xqdoc:uri>http://exist-db.org/xquery/compression</xqdoc:uri><xqdoc:name>compression</xqdoc:name><xqdoc:comment><xqdoc:description>A module for compression and decompression functions</xqdoc:description></xqdoc:comment></xqdoc:module><xqdoc:functions><xqdoc:function><xqdoc:name>compression:zip</xqdoc:name><xqdoc:signature>compression:zip($sources as xs:anyType+, $use-collection-hierarchy as xs:boolean) as xs:base64Binary*</xqdoc:signature><xqdoc:comment><xqdoc:description>Zips nodes, resources and collections.</xqdoc:description><xqdoc:param>$sources+ The sequence of URI's and/or Entrys. If an URI points to a collection then the collection, its resources and sub-collections are zipped recursively. If URI points to file (available only to the DBA role.) then file or directory are zipped. An Entry takes the format &lt;entry name="filename.ext" type="collection|uri|binary|xml|text" method="deflate|store"&gt;data&lt;/entry&gt;. The method attribute is only effective for the compression:zip function.</xqdoc:param><xqdoc:param>$use-collection-hierarchy Indicates whether the Collection hierarchy (if any) should be preserved in the zip file.</xqdoc:param><xqdoc:return>xs:base64Binary*</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>compression:zip</xqdoc:name><xqdoc:signature>compression:zip($sources as xs:anyType+, $use-collection-hierarchy as xs:boolean, $strip-prefix as xs:string) as xs:base64Binary*</xqdoc:signature><xqdoc:comment><xqdoc:description>Zips nodes, resources and collections.</xqdoc:description><xqdoc:param>$sources+ The sequence of URI's and/or Entrys. If an URI points to a collection then the collection, its resources and sub-collections are zipped recursively. If URI points to file (available only to the DBA role.) then file or directory are zipped. An Entry takes the format &lt;entry name="filename.ext" type="collection|uri|binary|xml|text" method="deflate|store"&gt;data&lt;/entry&gt;. The method attribute is only effective for the compression:zip function.</xqdoc:param><xqdoc:param>$use-collection-hierarchy Indicates whether the Collection hierarchy (if any) should be preserved in the zip file.</xqdoc:param><xqdoc:param>$strip-prefix This prefix is stripped from the Entrys name</xqdoc:param><xqdoc:return>xs:base64Binary*</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>compression:unzip</xqdoc:name><xqdoc:signature>compression:unzip($zip-data as xs:base64Binary, $entry-filter as function, $entry-filter-param as xs:anyType*, $entry-data as function, $entry-data-param as xs:anyType*) as item()*</xqdoc:signature><xqdoc:comment><xqdoc:description>UnZip all the resources/folders from the provided data by calling user defined functions to determine what and how to store the resources/folders</xqdoc:description><xqdoc:param>$zip-data The zip file data</xqdoc:param><xqdoc:param>$entry-filter A user defined function for filtering resources from the zip file. The function takes 3 parameters e.g. user:unzip-entry-filter($path as xs:string, $data-type as xs:string, $param as item()*) as xs:boolean. $data-type may be 'resource' or 'folder'. $param is a sequence with any additional parameters, for example a list of extracted files. If the return type is true() it indicates the entry should be processed and passed to the entry-data function, else the resource is skipped.</xqdoc:param><xqdoc:param>$entry-filter-param* A sequence with an additional parameters for filtering function.</xqdoc:param><xqdoc:param>$entry-data A user defined function for storing an extracted resource from the zip file. The function takes 4 parameters e.g. user:unzip-entry-data($path as xs:string, $data-type as xs:string, $data as item()?, $param as item()*). Or a user defined function wich returns path for storing an extracted resource from the tar file. The function takes 3 parameters e.g. user:entry-path($path as xs:string, $data-type as xs:string, $param as item()*) as xs:anyURI. $data-type may be 'resource' or 'folder'. $param is a sequence with any additional parameters.</xqdoc:param><xqdoc:param>$entry-data-param* A sequence with an additional parameters for storing function.</xqdoc:param><xqdoc:return>item()*</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>compression:gzip</xqdoc:name><xqdoc:signature>compression:gzip($data as xs:base64Binary) as xs:base64Binary?</xqdoc:signature><xqdoc:comment><xqdoc:description>GZip's data</xqdoc:description><xqdoc:param>$data The data to GZip</xqdoc:param><xqdoc:return>xs:base64Binary?</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>compression:ungzip</xqdoc:name><xqdoc:signature>compression:ungzip($gzip-data as xs:base64Binary) as xs:base64Binary?</xqdoc:signature><xqdoc:comment><xqdoc:description>UnGZip's data</xqdoc:description><xqdoc:param>$gzip-data The gzip data to uncompress.</xqdoc:param><xqdoc:return>xs:base64Binary?</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>compression:tar</xqdoc:name><xqdoc:signature>compression:tar($sources as xs:anyType+, $use-collection-hierarchy as xs:boolean) as xs:base64Binary*</xqdoc:signature><xqdoc:comment><xqdoc:description>Tars nodes, resources and collections.</xqdoc:description><xqdoc:param>$sources+ The sequence of URI's and/or Entrys. If an URI points to a collection then the collection, its resources and sub-collections are zipped recursively. If URI points to file (available only to the DBA role.) then file or directory are zipped. An Entry takes the format &lt;entry name="filename.ext" type="collection|uri|binary|xml|text" method="deflate|store"&gt;data&lt;/entry&gt;. The method attribute is only effective for the compression:zip function.</xqdoc:param><xqdoc:param>$use-collection-hierarchy Indicates whether the Collection hierarchy (if any) should be preserved in the zip file.</xqdoc:param><xqdoc:return>xs:base64Binary*</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>compression:tar</xqdoc:name><xqdoc:signature>compression:tar($sources as xs:anyType+, $use-collection-hierarchy as xs:boolean, $strip-prefix as xs:string) as xs:base64Binary*</xqdoc:signature><xqdoc:comment><xqdoc:description>Tars nodes, resources and collections.</xqdoc:description><xqdoc:param>$sources+ The sequence of URI's and/or Entrys. If an URI points to a collection then the collection, its resources and sub-collections are zipped recursively. If URI points to file (available only to the DBA role.) then file or directory are zipped. An Entry takes the format &lt;entry name="filename.ext" type="collection|uri|binary|xml|text" method="deflate|store"&gt;data&lt;/entry&gt;. The method attribute is only effective for the compression:zip function.</xqdoc:param><xqdoc:param>$use-collection-hierarchy Indicates whether the Collection hierarchy (if any) should be preserved in the zip file.</xqdoc:param><xqdoc:param>$strip-prefix This prefix is stripped from the Entrys name</xqdoc:param><xqdoc:return>xs:base64Binary*</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>compression:untar</xqdoc:name><xqdoc:signature>compression:untar($tar-data as xs:base64Binary, $entry-filter as function, $entry-filter-param as xs:anyType*, $entry-data as function, $entry-data-param as xs:anyType*) as item()*</xqdoc:signature><xqdoc:comment><xqdoc:description>UnTar all the resources/folders from the provided data by calling user defined functions to determine what and how to store the resources/folders</xqdoc:description><xqdoc:param>$tar-data The tar file data</xqdoc:param><xqdoc:param>$entry-filter A user defined function for filtering resources from the tar file. The function takes 3 parameters e.g. user:untar-entry-filter($path as xs:string, $data-type as xs:string, $param as item()*) as xs:boolean. $data-type may be 'resource' or 'folder'. $param is a sequence with any additional parameters, for example a list of extracted files. If the return type is true() it indicates the entry should be processed and passed to the entry-data function, else the resource is skipped.</xqdoc:param><xqdoc:param>$entry-filter-param* A sequence with an additional parameters for filtering function.</xqdoc:param><xqdoc:param>$entry-data A user defined function for storing an extracted resource from the tar file. The function takes 4 parameters e.g. user:untar-entry-data($path as xs:string, $data-type as xs:string, $data as item()?, $param as item()*). Or a user defined function wich returns path for storing an extracted resource from the tar file. The function takes 3 parameters e.g. user:entry-path($path as xs:string, $data-type as xs:string, $param as item()*) as xs:anyURI. $data-type may be 'resource' or 'folder'. $param is a sequence with any additional parameters</xqdoc:param><xqdoc:param>$entry-data-param* A sequence with an additional parameters for storing function.</xqdoc:param><xqdoc:return>item()*</xqdoc:return></xqdoc:comment></xqdoc:function></xqdoc:functions></xqdoc:xqdoc>