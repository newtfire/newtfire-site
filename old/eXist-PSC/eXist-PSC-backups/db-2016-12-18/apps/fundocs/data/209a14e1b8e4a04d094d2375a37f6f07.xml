<?xml version="1.0" encoding="UTF-8"?>
<xqdoc:xqdoc xmlns:xqdoc="http://www.xqdoc.org/1.0"><xqdoc:control><xqdoc:date>2015-05-06T12:07:02.066-04:00</xqdoc:date><xqdoc:location>java:org.exist.xquery.modules.httpclient.HTTPClientModule</xqdoc:location></xqdoc:control><xqdoc:module type="library"><xqdoc:uri>http://exist-db.org/xquery/httpclient</xqdoc:uri><xqdoc:name>httpclient</xqdoc:name><xqdoc:comment><xqdoc:description>A module for performing HTTP requests as a client</xqdoc:description></xqdoc:comment></xqdoc:module><xqdoc:functions><xqdoc:function><xqdoc:name>httpclient:get</xqdoc:name><xqdoc:signature>httpclient:get($url as xs:anyURI, $persist as xs:boolean, $request-headers as element()?) as item()</xqdoc:signature><xqdoc:comment><xqdoc:description>Performs a HTTP GET request. This method returns the HTTP response encoded as an XML fragment, that looks as follows: &lt;httpclient:response xmlns:httpclient="http://exist-db.org/xquery/httpclient" statusCode="200"&gt;&lt;httpclient:headers&gt;&lt;httpclient:header name="name" value="value"/&gt;...&lt;/httpclient:headers&gt;&lt;httpclient:body type="xml|xhtml|text|binary" mimetype="returned content mimetype"&gt;body content&lt;/httpclient:body&gt;&lt;/httpclient:response&gt; where XML body content will be returned as a Node, HTML body content will be tidied into an XML compatible form, a body with mime-type of "text/..." will be returned as a URLEncoded string, and any other body content will be returned as xs:base64Binary encoded data.</xqdoc:description><xqdoc:param>$url The URL to process</xqdoc:param><xqdoc:param>$persist Indicates if the HTTP state (eg. cookies, credentials, etc.) should persist for the life of this xquery</xqdoc:param><xqdoc:param>$request-headers? Any HTTP Request Headers to set in the form  &lt;headers&gt;&lt;header name="" value=""/&gt;&lt;/headers&gt;</xqdoc:param><xqdoc:return>item() : the XML body content</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>httpclient:get</xqdoc:name><xqdoc:signature>httpclient:get($url as xs:anyURI, $persist as xs:boolean, $request-headers as element()?, $parser-options as element()?) as item()</xqdoc:signature><xqdoc:comment><xqdoc:description>Performs a HTTP GET request. This method returns the HTTP response encoded as an XML fragment, that looks as follows: &lt;httpclient:response xmlns:httpclient="http://exist-db.org/xquery/httpclient" statusCode="200"&gt;&lt;httpclient:headers&gt;&lt;httpclient:header name="name" value="value"/&gt;...&lt;/httpclient:headers&gt;&lt;httpclient:body type="xml|xhtml|text|binary" mimetype="returned content mimetype"&gt;body content&lt;/httpclient:body&gt;&lt;/httpclient:response&gt; where XML body content will be returned as a Node, HTML body content will be tidied into an XML compatible form, a body with mime-type of "text/..." will be returned as a URLEncoded string, and any other body content will be returned as xs:base64Binary encoded data. When HTML is converted to XML. Features and properties of the parser may be set in the options parameter.</xqdoc:description><xqdoc:param>$url The URL to process</xqdoc:param><xqdoc:param>$persist Indicates if the HTTP state (eg. cookies, credentials, etc.) should persist for the life of this xquery</xqdoc:param><xqdoc:param>$request-headers? Any HTTP Request Headers to set in the form  &lt;headers&gt;&lt;header name="" value=""/&gt;&lt;/headers&gt;</xqdoc:param><xqdoc:param>$parser-options? Feature and Property options to be passed to the HTML/XML parser in the form &lt;options&gt;&lt;feature name="" value="{true|false}"/&gt;&lt;property name="" value=""/&gt;&lt;/options&gt;</xqdoc:param><xqdoc:return>item() : the XML body content</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>httpclient:put</xqdoc:name><xqdoc:signature>httpclient:put($url as xs:anyURI, $content as item(), $persist as xs:boolean, $request-headers as element()?) as item()</xqdoc:signature><xqdoc:comment><xqdoc:description>Performs a HTTP PUT request.. This method returns the HTTP response encoded as an XML fragment, that looks as follows: &lt;httpclient:response xmlns:httpclient="http://exist-db.org/xquery/httpclient" statusCode="200"&gt;&lt;httpclient:headers&gt;&lt;httpclient:header name="name" value="value"/&gt;...&lt;/httpclient:headers&gt;&lt;httpclient:body type="xml|xhtml|text|binary" mimetype="returned content mimetype"&gt;body content&lt;/httpclient:body&gt;&lt;/httpclient:response&gt; where XML body content will be returned as a Node, HTML body content will be tidied into an XML compatible form, a body with mime-type of "text/..." will be returned as a URLEncoded string, and any other body content will be returned as xs:base64Binary encoded data.</xqdoc:description><xqdoc:param>$url The URL to process</xqdoc:param><xqdoc:param>$content The XML PUT payload/content. If it is an XML Node it will be serialized. If it is a binary stream it pass as it, any other type will be atomized into a string.</xqdoc:param><xqdoc:param>$persist Indicates if the HTTP state (eg. cookies, credentials, etc.) should persist for the life of this xquery</xqdoc:param><xqdoc:param>$request-headers? Any HTTP Request Headers to set in the form  &lt;headers&gt;&lt;header name="" value=""/&gt;&lt;/headers&gt;</xqdoc:param><xqdoc:return>item() : the XML body content</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>httpclient:put</xqdoc:name><xqdoc:signature>httpclient:put($url as xs:anyURI, $content as item(), $persist as xs:boolean, $request-headers as element()?, $indentation as xs:integer) as item()</xqdoc:signature><xqdoc:comment><xqdoc:description>Performs a HTTP PUT request.. This method returns the HTTP response encoded as an XML fragment, that looks as follows: &lt;httpclient:response xmlns:httpclient="http://exist-db.org/xquery/httpclient" statusCode="200"&gt;&lt;httpclient:headers&gt;&lt;httpclient:header name="name" value="value"/&gt;...&lt;/httpclient:headers&gt;&lt;httpclient:body type="xml|xhtml|text|binary" mimetype="returned content mimetype"&gt;body content&lt;/httpclient:body&gt;&lt;/httpclient:response&gt; where XML body content will be returned as a Node, HTML body content will be tidied into an XML compatible form, a body with mime-type of "text/..." will be returned as a URLEncoded string, and any other body content will be returned as xs:base64Binary encoded data.</xqdoc:description><xqdoc:param>$url The URL to process</xqdoc:param><xqdoc:param>$content The XML PUT payload/content. If it is an XML Node it will be serialized. If it is a binary stream it pass as it, any other type will be atomized into a string.</xqdoc:param><xqdoc:param>$persist Indicates if the HTTP state (eg. cookies, credentials, etc.) should persist for the life of this xquery</xqdoc:param><xqdoc:param>$request-headers? Any HTTP Request Headers to set in the form  &lt;headers&gt;&lt;header name="" value=""/&gt;&lt;/headers&gt;</xqdoc:param><xqdoc:param>$indentation Indentation level.  If this parameter is added, then the XML being put will be serailazed with indentation and the number is the number of characters for each level of indentation.  If this parameter is not include, then the XML is serialized to one line of text.</xqdoc:param><xqdoc:return>item() : the XML body content</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>httpclient:delete</xqdoc:name><xqdoc:signature>httpclient:delete($url as xs:anyURI, $persist as xs:boolean, $request-headers as element()?) as item()</xqdoc:signature><xqdoc:comment><xqdoc:description>Performs a HTTP DELETE request. This method returns the HTTP response encoded as an XML fragment, that looks as follows: &lt;httpclient:response xmlns:httpclient="http://exist-db.org/xquery/httpclient" statusCode="200"&gt;&lt;httpclient:headers&gt;&lt;httpclient:header name="name" value="value"/&gt;...&lt;/httpclient:headers&gt;&lt;httpclient:body type="xml|xhtml|text|binary" mimetype="returned content mimetype"&gt;body content&lt;/httpclient:body&gt;&lt;/httpclient:response&gt; where XML body content will be returned as a Node, HTML body content will be tidied into an XML compatible form, a body with mime-type of "text/..." will be returned as a URLEncoded string, and any other body content will be returned as xs:base64Binary encoded data.</xqdoc:description><xqdoc:param>$url The URL to process</xqdoc:param><xqdoc:param>$persist Indicates if the HTTP state (eg. cookies, credentials, etc.) should persist for the life of this xquery</xqdoc:param><xqdoc:param>$request-headers? Any HTTP Request Headers to set in the form  &lt;headers&gt;&lt;header name="" value=""/&gt;&lt;/headers&gt;</xqdoc:param><xqdoc:return>item() : the XML body content</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>httpclient:post</xqdoc:name><xqdoc:signature>httpclient:post($url as xs:anyURI, $content as item(), $persist as xs:boolean, $request-headers as element()?) as item()</xqdoc:signature><xqdoc:comment><xqdoc:description>Performs a HTTP POST request. This method returns the HTTP response encoded as an XML fragment, that looks as follows: &lt;httpclient:response xmlns:httpclient="http://exist-db.org/xquery/httpclient" statusCode="200"&gt;&lt;httpclient:headers&gt;&lt;httpclient:header name="name" value="value"/&gt;...&lt;/httpclient:headers&gt;&lt;httpclient:body type="xml|xhtml|text|binary" mimetype="returned content mimetype"&gt;body content&lt;/httpclient:body&gt;&lt;/httpclient:response&gt; where XML body content will be returned as a Node, HTML body content will be tidied into an XML compatible form, a body with mime-type of "text/..." will be returned as a URLEncoded string, and any other body content will be returned as xs:base64Binary encoded data.</xqdoc:description><xqdoc:param>$url The URL to process</xqdoc:param><xqdoc:param>$content The XML POST payload/content. If it is an XML Node it will be serialized, any other type will be atomized into a string.</xqdoc:param><xqdoc:param>$persist Indicates if the HTTP state (eg. cookies, credentials, etc.) should persist for the life of this xquery</xqdoc:param><xqdoc:param>$request-headers? Any HTTP Request Headers to set in the form  &lt;headers&gt;&lt;header name="" value=""/&gt;&lt;/headers&gt;</xqdoc:param><xqdoc:return>item() : the XML body content</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>httpclient:post-form</xqdoc:name><xqdoc:signature>httpclient:post-form($url as xs:anyURI, $content as element(), $persist as xs:boolean, $request-headers as element()?) as item()</xqdoc:signature><xqdoc:comment><xqdoc:description>Performs a HTTP POST request for a form. This method returns the HTTP response encoded as an XML fragment, that looks as follows: &lt;httpclient:response xmlns:httpclient="http://exist-db.org/xquery/httpclient" statusCode="200"&gt;&lt;httpclient:headers&gt;&lt;httpclient:header name="name" value="value"/&gt;...&lt;/httpclient:headers&gt;&lt;httpclient:body type="xml|xhtml|text|binary" mimetype="returned content mimetype"&gt;body content&lt;/httpclient:body&gt;&lt;/httpclient:response&gt; where XML body content will be returned as a Node, HTML body content will be tidied into an XML compatible form, a body with mime-type of "text/..." will be returned as a URLEncoded string, and any other body content will be returned as xs:base64Binary encoded data.</xqdoc:description><xqdoc:param>$url The URL to process</xqdoc:param><xqdoc:param>$content The form data in the format &lt;httpclient:fields&gt;&lt;httpclient:field name="" value="" type="string|file"/&gt;...&lt;/httpclient:fields&gt;.  If the field values will be suitably URLEncoded and sent with the mime type application/x-www-form-urlencoded.</xqdoc:param><xqdoc:param>$persist Indicates if the HTTP state (eg. cookies, credentials, etc.) should persist for the life of this xquery</xqdoc:param><xqdoc:param>$request-headers? Any HTTP Request Headers to set in the form  &lt;headers&gt;&lt;header name="" value=""/&gt;&lt;/headers&gt;</xqdoc:param><xqdoc:return>item() : the XML body content</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>httpclient:head</xqdoc:name><xqdoc:signature>httpclient:head($url as xs:anyURI, $persist as xs:boolean, $request-headers as element()?) as item()</xqdoc:signature><xqdoc:comment><xqdoc:description>Performs a HTTP HEAD request. This method returns the HTTP response encoded as an XML fragment, that looks as follows: &lt;httpclient:response  xmlns:httpclient="http://exist-db.org/xquery/httpclient" statusCode="200"&gt;&lt;httpclient:headers&gt;&lt;httpclient:header name="name" value="value"/&gt;...&lt;/httpclient:headers&gt;&lt;/httpclient:response&gt;</xqdoc:description><xqdoc:param>$url The URL to process</xqdoc:param><xqdoc:param>$persist Indicates if the HTTP state (eg. cookies, credentials, etc.) should persist for the life of this xquery</xqdoc:param><xqdoc:param>$request-headers? Any HTTP Request Headers to set in the form  &lt;headers&gt;&lt;header name="" value=""/&gt;&lt;/headers&gt;</xqdoc:param><xqdoc:return>item() : the XML body content</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>httpclient:options</xqdoc:name><xqdoc:signature>httpclient:options($url as xs:anyURI, $persist as xs:boolean, $request-headers as element()?) as item()</xqdoc:signature><xqdoc:comment><xqdoc:description>Performs a HTTP OPTIONS request. This method returns the HTTP response encoded as an XML fragment, that looks as follows: &lt;httpclient:response  xmlns:httpclient="http://exist-db.org/xquery/httpclient" statusCode="200"&gt;&lt;httpclient:headers&gt;&lt;httpclient:header name="name" value="value"/&gt;...&lt;/httpclient:headers&gt;&lt;/httpclient:response&gt;</xqdoc:description><xqdoc:param>$url The URL to process</xqdoc:param><xqdoc:param>$persist Indicates if the HTTP state (eg. cookies, credentials, etc.) should persist for the life of this xquery</xqdoc:param><xqdoc:param>$request-headers? Any HTTP Request Headers to set in the form  &lt;headers&gt;&lt;header name="" value=""/&gt;&lt;/headers&gt;</xqdoc:param><xqdoc:return>item() : the XML body content</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>httpclient:clear-all</xqdoc:name><xqdoc:signature>httpclient:clear-all() as item()</xqdoc:signature><xqdoc:comment><xqdoc:description>Clears all persistent state (eg. cookies, credentials, etc.) stored in the current session on the client.</xqdoc:description><xqdoc:return>item()</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>httpclient:set-parser-options</xqdoc:name><xqdoc:signature>httpclient:set-parser-options($parser-options as element()?) as item()</xqdoc:signature><xqdoc:comment><xqdoc:description>Sets default options for the HTML parser for all subsequent requests in this session</xqdoc:description><xqdoc:param>$parser-options? Feature and Property options to be passed to the HTML/XML parser in the form &lt;options&gt;&lt;feature name="" value="{true|false}"/&gt;&lt;property name="" value=""/&gt;&lt;/options&gt;</xqdoc:param><xqdoc:return>item()</xqdoc:return></xqdoc:comment></xqdoc:function></xqdoc:functions></xqdoc:xqdoc>