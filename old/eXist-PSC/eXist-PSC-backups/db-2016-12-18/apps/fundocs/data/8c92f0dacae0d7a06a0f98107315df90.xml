<?xml version="1.0" encoding="UTF-8"?>
<xqdoc:xqdoc xmlns:xqdoc="http://www.xqdoc.org/1.0"><xqdoc:control><xqdoc:date>2015-05-06T12:07:02.066-04:00</xqdoc:date><xqdoc:location>/db/apps/demo/examples/templating/examples.xql</xqdoc:location></xqdoc:control><xqdoc:module type="library"><xqdoc:uri>http://exist-db.org/apps/demo/templating/examples</xqdoc:uri><xqdoc:name>ex</xqdoc:name><xqdoc:comment><xqdoc:description/></xqdoc:comment></xqdoc:module><xqdoc:functions><xqdoc:function><xqdoc:name>ex:addresses</xqdoc:name><xqdoc:signature>ex:addresses($node as node(), $model as map) as map</xqdoc:signature><xqdoc:comment><xqdoc:description/><xqdoc:param>$node </xqdoc:param><xqdoc:param>$model </xqdoc:param><xqdoc:return>map</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>ex:hello</xqdoc:name><xqdoc:signature>ex:hello($node as node()*, $model as map) as element()</xqdoc:signature><xqdoc:comment><xqdoc:description>
 Simple templating function. A templating function needs to take two parameters at least.
 It may return any sequence, which will be inserted into the output instead of $node.

 </xqdoc:description><xqdoc:param>$node* the HTML node which contained the class attribute which triggered this call.</xqdoc:param><xqdoc:param>$model an arbitrary sequence of items. Use this to pass required information between
 tempate functions.</xqdoc:param><xqdoc:return>element()</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>ex:hello-world</xqdoc:name><xqdoc:signature>ex:hello-world($node as node(), $model as map, $language as xs:string, $user as xs:string) as xs:string</xqdoc:signature><xqdoc:comment><xqdoc:description/><xqdoc:param>$node </xqdoc:param><xqdoc:param>$model </xqdoc:param><xqdoc:param>$language </xqdoc:param><xqdoc:param>$user </xqdoc:param><xqdoc:return>xs:string</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>ex:multiply</xqdoc:name><xqdoc:signature>ex:multiply($node as node()*, $model as map, $n1 as xs:int, $n2 as xs:int) as item()*</xqdoc:signature><xqdoc:comment><xqdoc:description>
 A templating function taking two additional parameters. The templating framework inspects
 the function signature and tries to fill in additional parameters automatically. The value
 to use is determined as follows:

 &lt;ol&gt;
    &lt;li&gt;if there's a (non-empty) request parameter with the same name as the variable, use it&lt;/li&gt;
    &lt;li&gt;else if there's a (non-empty) session attribute with the same name as the variable, use it&lt;/li&gt;
    &lt;li&gt;test if there's an annotation %templates:default(name, value) whose first parameter matches
    the name of the parameter variable. Use the second parameter as value if it does.&lt;/li&gt;
 &lt;/ol&gt;
</xqdoc:description><xqdoc:param>$node* </xqdoc:param><xqdoc:param>$model </xqdoc:param><xqdoc:param>$n1 </xqdoc:param><xqdoc:param>$n2 </xqdoc:param><xqdoc:return>item()*</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>ex:print-city</xqdoc:name><xqdoc:signature>ex:print-city($node as node(), $model as map) as item()*</xqdoc:signature><xqdoc:comment><xqdoc:description/><xqdoc:param>$node </xqdoc:param><xqdoc:param>$model </xqdoc:param><xqdoc:return>item()*</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>ex:print-name</xqdoc:name><xqdoc:signature>ex:print-name($node as node(), $model as map) as item()*</xqdoc:signature><xqdoc:comment><xqdoc:description/><xqdoc:param>$node </xqdoc:param><xqdoc:param>$model </xqdoc:param><xqdoc:return>item()*</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>ex:print-street</xqdoc:name><xqdoc:signature>ex:print-street($node as node(), $model as map) as item()*</xqdoc:signature><xqdoc:comment><xqdoc:description/><xqdoc:param>$node </xqdoc:param><xqdoc:param>$model </xqdoc:param><xqdoc:return>item()*</xqdoc:return></xqdoc:comment></xqdoc:function></xqdoc:functions></xqdoc:xqdoc>