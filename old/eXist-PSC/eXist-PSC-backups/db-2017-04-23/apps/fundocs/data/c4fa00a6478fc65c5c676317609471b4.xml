<?xml version="1.0" encoding="UTF-8"?>
<xqdoc:xqdoc xmlns:xqdoc="http://www.xqdoc.org/1.0"><xqdoc:control><xqdoc:date>2015-05-06T12:07:02.066-04:00</xqdoc:date><xqdoc:location>/db/apps/demo/modules/i18n.xql</xqdoc:location></xqdoc:control><xqdoc:module type="library"><xqdoc:uri>http://exist-db.org/xquery/i18n</xqdoc:uri><xqdoc:name>i18n</xqdoc:name><xqdoc:comment><xqdoc:description/></xqdoc:comment></xqdoc:module><xqdoc:functions><xqdoc:function><xqdoc:name>i18n:apply</xqdoc:name><xqdoc:signature>i18n:apply($content as node()+, $modules as element(), $model as item()*) as item()*</xqdoc:signature><xqdoc:comment><xqdoc:description>
 Start processing the provided content using the modules defined by $modules. $modules should
 be an XML fragment following the scheme:

 &lt;modules&gt;
       &lt;module prefix="module-prefix" uri="module-uri" at="module location relative to apps module collection"/&gt;
 &lt;/modules&gt;

 </xqdoc:description><xqdoc:param>$content+ the sequence of nodes which will be processed</xqdoc:param><xqdoc:param>$modules modules to import</xqdoc:param><xqdoc:param>$model* a sequence of items which will be passed to all called template functions. Use this to pass
 information between templating instructions.</xqdoc:param><xqdoc:return>item()*</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>i18n:getLanguageCollection</xqdoc:name><xqdoc:signature>i18n:getLanguageCollection($node as node()*, $selectedLang as xs:string, $pathToCatalogues as xs:string, $defaultLang as xs:string?) as item()*</xqdoc:signature><xqdoc:comment><xqdoc:description/><xqdoc:param>$node* </xqdoc:param><xqdoc:param>$selectedLang </xqdoc:param><xqdoc:param>$pathToCatalogues </xqdoc:param><xqdoc:param>$defaultLang? </xqdoc:param><xqdoc:return>item()*</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>i18n:getLocalizedText</xqdoc:name><xqdoc:signature>i18n:getLocalizedText($textNode as node(), $selectedCatalogue as node()) as item()*</xqdoc:signature><xqdoc:comment><xqdoc:description/><xqdoc:param>$textNode </xqdoc:param><xqdoc:param>$selectedCatalogue </xqdoc:param><xqdoc:return>item()*</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>i18n:getPathToCatalgogues</xqdoc:name><xqdoc:signature>i18n:getPathToCatalgogues($node as node()*, $pathToCatalogues as xs:string) as item()*</xqdoc:signature><xqdoc:comment><xqdoc:description/><xqdoc:param>$node* </xqdoc:param><xqdoc:param>$pathToCatalogues </xqdoc:param><xqdoc:return>item()*</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>i18n:getSelectedLanguage</xqdoc:name><xqdoc:signature>i18n:getSelectedLanguage($node as node()*, $selectedLang as xs:string) as item()*</xqdoc:signature><xqdoc:comment><xqdoc:description/><xqdoc:param>$node* </xqdoc:param><xqdoc:param>$selectedLang </xqdoc:param><xqdoc:return>item()*</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>i18n:process</xqdoc:name><xqdoc:signature>i18n:process($node as node(), $selectedCatalogue as node()) as item()*</xqdoc:signature><xqdoc:comment><xqdoc:description>
 recursive function to traverse through the document and to process all i18n prefixed nodes 
 
 </xqdoc:description><xqdoc:param>$node node to analyse if is an i18n:* node</xqdoc:param><xqdoc:param>$selectedCatalogue </xqdoc:param><xqdoc:return>item()*</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>i18n:process</xqdoc:name><xqdoc:signature>i18n:process($nodes as node()*, $selectedLang as xs:string, $pathToCatalogues as xs:string, $defaultLang as xs:string?) as item()*</xqdoc:signature><xqdoc:comment><xqdoc:description>
 Continue template processing on the given set of nodes. Call this function from
 within other template functions to enable recursive processing of templates.

 </xqdoc:description><xqdoc:param>$nodes* the nodes to process</xqdoc:param><xqdoc:param>$selectedLang </xqdoc:param><xqdoc:param>$pathToCatalogues </xqdoc:param><xqdoc:param>$defaultLang? </xqdoc:param><xqdoc:return>item()*</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>i18n:replaceParam</xqdoc:name><xqdoc:signature>i18n:replaceParam($node as node(), $param as node(), $paramKey as xs:string, $text as xs:string, $selectedCatalogue as node()) as item()*</xqdoc:signature><xqdoc:comment><xqdoc:description>
 function replacing the parameter with its (localized) value  
 
 </xqdoc:description><xqdoc:param>$node i18n:translate node eclosing i18n:text and parameters to substitute</xqdoc:param><xqdoc:param>$param currently processed i18n:param as node()</xqdoc:param><xqdoc:param>$paramKey currently processed parameterKey (numerical or alphabetical)</xqdoc:param><xqdoc:param>$text the processed(!) content of i18n:text</xqdoc:param><xqdoc:param>$selectedCatalogue </xqdoc:param><xqdoc:return>item()*</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>i18n:translate</xqdoc:name><xqdoc:signature>i18n:translate($node as node(), $text as xs:string, $selectedCatalogue as node()) as item()*</xqdoc:signature><xqdoc:comment><xqdoc:description>
 function implementing i18n:translate to enable localization of strings containing alphabetical or numerical parameters  
 
 </xqdoc:description><xqdoc:param>$node i18n:translate node eclosing i18n:text and parameters to substitute</xqdoc:param><xqdoc:param>$text the processed(!) content of i18n:text</xqdoc:param><xqdoc:param>$selectedCatalogue </xqdoc:param><xqdoc:return>item()*</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>i18n:translateAttribute</xqdoc:name><xqdoc:signature>i18n:translateAttribute($attribute as attribute(), $node as node(), $selectedCatalogue as node()) as item()*</xqdoc:signature><xqdoc:comment><xqdoc:description/><xqdoc:param>$attribute </xqdoc:param><xqdoc:param>$node </xqdoc:param><xqdoc:param>$selectedCatalogue </xqdoc:param><xqdoc:return>item()*</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>i18n:translateAttributes</xqdoc:name><xqdoc:signature>i18n:translateAttributes($node as node(), $selectedCatalogue as node()) as item()*</xqdoc:signature><xqdoc:comment><xqdoc:description/><xqdoc:param>$node </xqdoc:param><xqdoc:param>$selectedCatalogue </xqdoc:param><xqdoc:return>item()*</xqdoc:return></xqdoc:comment></xqdoc:function></xqdoc:functions></xqdoc:xqdoc>