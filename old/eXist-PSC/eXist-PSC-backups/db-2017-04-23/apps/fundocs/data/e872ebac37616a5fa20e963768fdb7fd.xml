<?xml version="1.0" encoding="UTF-8"?>
<xqdoc:xqdoc xmlns:xqdoc="http://www.xqdoc.org/1.0"><xqdoc:control><xqdoc:date>2015-05-06T12:07:02.066-04:00</xqdoc:date><xqdoc:location>java:org.exist.xquery.functions.xmldb.XMLDBModule</xqdoc:location></xqdoc:control><xqdoc:module type="library"><xqdoc:uri>http://exist-db.org/xquery/xmldb</xqdoc:uri><xqdoc:name>xmldb</xqdoc:name><xqdoc:comment><xqdoc:description>A module for database manipulation functions.</xqdoc:description></xqdoc:comment></xqdoc:module><xqdoc:functions><xqdoc:function><xqdoc:name>xmldb:add-user-to-group</xqdoc:name><xqdoc:signature>xmldb:add-user-to-group($user as xs:string, $group as xs:string) as xs:boolean</xqdoc:signature><xqdoc:comment><xqdoc:description>Add a user to a group. $user is the username. $group is the group nameThe XQuery owner must have appropriate privileges to do this, e.g. having DBA role.</xqdoc:description><xqdoc:param>$user The user name</xqdoc:param><xqdoc:param>$group The group name</xqdoc:param><xqdoc:return>xs:boolean : true() or false() indicating the outcome of the operation</xqdoc:return><xqdoc:deprecated>Moved to the module: http://exist-db.org/xquery/securitymanager, you should now use 'sm:add-group-member' instead!
This function could be removed in the next major release version.</xqdoc:deprecated></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>xmldb:authenticate</xqdoc:name><xqdoc:signature>xmldb:authenticate($collection-uri as xs:string, $user-id as xs:string?, $password as xs:string?) as xs:boolean</xqdoc:signature><xqdoc:comment><xqdoc:description>Check if the user, $user-id, can authenticate against the database collection $collection-uri. The function simply tries to read the collection $collection-uri, using the credentials $user-id and $password. Collection URIs can be specified either as a simple collection path or an XMLDB URI. It returns true if the authentication succeeds, false otherwise.</xqdoc:description><xqdoc:param>$collection-uri The collection URI</xqdoc:param><xqdoc:param>$user-id? The user-id</xqdoc:param><xqdoc:param>$password? The password</xqdoc:param><xqdoc:return>xs:boolean : true() on successful authentication, false() otherwise</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>xmldb:change-user</xqdoc:name><xqdoc:signature>xmldb:change-user($user-id as xs:string, $password as xs:string?, $groups as xs:string*) as item()</xqdoc:signature><xqdoc:comment><xqdoc:description>Change properties of an existing database user. The XQuery owner must have appropriate privileges to do this, e.g. having DBA role. $user-id is the username, $password is the password, $groups is the sequence of group memberships, The username, $user-id, is mandatory. Non-empty values for the other parameters are optional, where if empty the existing value is used.</xqdoc:description><xqdoc:param>$user-id The user-id</xqdoc:param><xqdoc:param>$password? The password</xqdoc:param><xqdoc:param>$groups* The groups the user is member of</xqdoc:param><xqdoc:return>item()</xqdoc:return><xqdoc:deprecated>Use either sm:passwd for changing a password or sm:add-group-member to add a user to a group or sm:remove-group-member to remove a user from a group.
This function could be removed in the next major release version.</xqdoc:deprecated></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>xmldb:change-user</xqdoc:name><xqdoc:signature>xmldb:change-user($user-id as xs:string, $password as xs:string?, $groups as xs:string*, $home-collection as xs:string?) as item()</xqdoc:signature><xqdoc:comment><xqdoc:description>Change properties of an existing database user. The XQuery owner must have appropriate privileges to do this, e.g. having DBA role. $user-id is the username, $password is the password, $groups is the sequence of group memberships, $home-collection is the home collection. The username, $user-id, is mandatory. Non-empty values for the other parameters are optional, where if empty the existing value is used.</xqdoc:description><xqdoc:param>$user-id The user-id</xqdoc:param><xqdoc:param>$password? The password</xqdoc:param><xqdoc:param>$groups* The groups the user is member of</xqdoc:param><xqdoc:param>$home-collection? The user's home collection</xqdoc:param><xqdoc:return>item()</xqdoc:return><xqdoc:deprecated>$home-collection has no effect since 2.0. Use either sm:passwd for changing a password or sm:add-group-member to add a user to a group or sm:remove-group-member to remove a user from a group.
This function could be removed in the next major release version.</xqdoc:deprecated></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>xmldb:chmod-collection</xqdoc:name><xqdoc:signature>xmldb:chmod-collection($collection as xs:string, $mode as xs:integer) as item()</xqdoc:signature><xqdoc:comment><xqdoc:description>Sets the mode of collection $collection. $mode is the mode as xs:integer. PLEASE REMEMBER that octal number 0755 is 7*64+5*8+5 i.e. 493 in decimal NOT 755. You can use util:base-to-integer(0755, 8) as argument for convenience.</xqdoc:description><xqdoc:param>$collection The collection path</xqdoc:param><xqdoc:param>$mode The mode as xs:integer</xqdoc:param><xqdoc:return>item()</xqdoc:return><xqdoc:deprecated>Moved to the module: http://exist-db.org/xquery/securitymanager, you should now use 'sm:chmod' instead!
This function could be removed in the next major release version.</xqdoc:deprecated></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>xmldb:chmod-resource</xqdoc:name><xqdoc:signature>xmldb:chmod-resource($collection as xs:string, $resource as xs:string, $mode as xs:integer) as item()</xqdoc:signature><xqdoc:comment><xqdoc:description>Sets the mode of the resource $resource in collection $collection, $mode is the mode as xs:integer. PLEASE REMEMBER that octal number 0755 is 7*64+5*8+5 i.e. 493 in decimal NOT 755. You can use util:base-to-integer(0755, 8) as argument for convenience.</xqdoc:description><xqdoc:param>$collection The collection</xqdoc:param><xqdoc:param>$resource The resource</xqdoc:param><xqdoc:param>$mode The mode as xs:integer</xqdoc:param><xqdoc:return>item()</xqdoc:return><xqdoc:deprecated>Moved to the module: http://exist-db.org/xquery/securitymanager, you should now use 'sm:chmod' instead!
This function could be removed in the next major release version.</xqdoc:deprecated></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>xmldb:clear-lock</xqdoc:name><xqdoc:signature>xmldb:clear-lock($collection-uri as xs:string, $resource as xs:string) as xs:string?</xqdoc:signature><xqdoc:comment><xqdoc:description>Returns the user-id of the user that holds a write lock on the resource $resource in the collection $collection-uri.  If no lock is in place, the empty sequence is returned. Collection URIs can be specified either as a simple collection path or an XMLDB URI.</xqdoc:description><xqdoc:param>$collection-uri The collection URI</xqdoc:param><xqdoc:param>$resource The resource</xqdoc:param><xqdoc:return>xs:string? : the user id of the lock owner, otherwise if not locked the empty sequence</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>xmldb:collection-available</xqdoc:name><xqdoc:signature>xmldb:collection-available($collection-uri as xs:string) as xs:boolean</xqdoc:signature><xqdoc:comment><xqdoc:description>Returns true() if the collection $collection-uri exists and is available, otherwise false(). Collection URIs can be specified either as a simple collection path or an XMLDB URI.</xqdoc:description><xqdoc:param>$collection-uri The collection URI</xqdoc:param><xqdoc:return>xs:boolean : true() if the collection exists and is available, false() otherwise</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>xmldb:copy</xqdoc:name><xqdoc:signature>xmldb:copy($source-collection-uri as xs:string, $target-collection-uri as xs:string) as item()</xqdoc:signature><xqdoc:comment><xqdoc:description>Copy the collection $source-collection-uri to the collection $target-collection-uri. Collection URIs can be specified either as a simple collection path or an XMLDB URI.</xqdoc:description><xqdoc:param>$source-collection-uri The source collection URI</xqdoc:param><xqdoc:param>$target-collection-uri The target collection URI</xqdoc:param><xqdoc:return>item()</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>xmldb:copy</xqdoc:name><xqdoc:signature>xmldb:copy($source-collection-uri as xs:string, $target-collection-uri as xs:string, $resource as xs:string) as item()</xqdoc:signature><xqdoc:comment><xqdoc:description>Copy the resource $resource in $source-collection-uri to collection $target-collection-uri. Collection URIs can be specified either as a simple collection path or an XMLDB URI.</xqdoc:description><xqdoc:param>$source-collection-uri The source collection URI</xqdoc:param><xqdoc:param>$target-collection-uri the target collection URI</xqdoc:param><xqdoc:param>$resource the resource to copy</xqdoc:param><xqdoc:return>item()</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>xmldb:create-collection</xqdoc:name><xqdoc:signature>xmldb:create-collection($target-collection-uri as xs:string, $new-collection as xs:string) as xs:string?</xqdoc:signature><xqdoc:comment><xqdoc:description>Create a new collection with name $new-collection as a child of $target-collection-uri. Collection URIs can be specified either as a simple collection path or an XMLDB URI.Returns the path to the new collection if successfully created, otherwise the empty sequence.</xqdoc:description><xqdoc:param>$target-collection-uri The target collection URI</xqdoc:param><xqdoc:param>$new-collection The name of the new collection to create</xqdoc:param><xqdoc:return>xs:string? : the path to the new collection if successfully created, otherwise the empty sequence</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>xmldb:create-group</xqdoc:name><xqdoc:signature>xmldb:create-group($group as xs:string) as xs:boolean</xqdoc:signature><xqdoc:comment><xqdoc:description>Create a new user group. $group is the group name. The current user will be the groups manager.</xqdoc:description><xqdoc:param>$group The group name</xqdoc:param><xqdoc:return>xs:boolean : true() or false() indicating the outcome of the operation</xqdoc:return><xqdoc:deprecated>Moved to the module: http://exist-db.org/xquery/securitymanager, you should now use 'sm:create-group' instead!
This function could be removed in the next major release version.</xqdoc:deprecated></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>xmldb:create-group</xqdoc:name><xqdoc:signature>xmldb:create-group($group as xs:string, $group-manager-username as xs:string+) as xs:boolean</xqdoc:signature><xqdoc:comment><xqdoc:description>Create a new user group, with an initial member. $group is the group name, $group-manager-username are the groups managers in addition to the current user.</xqdoc:description><xqdoc:param>$group The group name</xqdoc:param><xqdoc:param>$group-manager-username+ The name of the user(s) who will be the groups manager</xqdoc:param><xqdoc:return>xs:boolean : true() or false() indicating the outcome of the operation</xqdoc:return><xqdoc:deprecated>Moved to the module: http://exist-db.org/xquery/securitymanager, you should now use 'sm:create-group' instead!
This function could be removed in the next major release version.</xqdoc:deprecated></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>xmldb:create-user</xqdoc:name><xqdoc:signature>xmldb:create-user($user-id as xs:string, $password as xs:string, $groups as xs:string+) as item()</xqdoc:signature><xqdoc:comment><xqdoc:description>Create a new user, $user-id, in the database. The XQuery owner must have appropriate privileges to do this, e.g. having DBA role. $user-id is the username, $password is the password, $groups is the sequence of group memberships. The first group in the sequence is the primary group.Collection URIs can be specified either as a simple collection path or an XMLDB URI.</xqdoc:description><xqdoc:param>$user-id The user-id</xqdoc:param><xqdoc:param>$password The password</xqdoc:param><xqdoc:param>$groups+ The group memberships</xqdoc:param><xqdoc:return>item()</xqdoc:return><xqdoc:deprecated>Moved to the module: http://exist-db.org/xquery/securitymanager, you should now use 'sm:create-account' instead!
This function could be removed in the next major release version.</xqdoc:deprecated></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>xmldb:create-user</xqdoc:name><xqdoc:signature>xmldb:create-user($user-id as xs:string, $password as xs:string, $groups as xs:string+, $home-collection-uri as xs:string?) as item()</xqdoc:signature><xqdoc:comment><xqdoc:description>Create a new user, $user-id, in the database. The XQuery owner must have appropriate privileges to do this, e.g. having DBA role. $user-id is the username, $password is the password, $groups is the sequence of group memberships. The first group in the sequence is the primary group.$home-collection-uri is the home collection URI.Collection URIs can be specified either as a simple collection path or an XMLDB URI.</xqdoc:description><xqdoc:param>$user-id The user-id</xqdoc:param><xqdoc:param>$password The password</xqdoc:param><xqdoc:param>$groups+ The group memberships</xqdoc:param><xqdoc:param>$home-collection-uri? The home collection URI</xqdoc:param><xqdoc:return>item()</xqdoc:return><xqdoc:deprecated>$home-collection-uri has no effect since 2.0. You should use the sm:create-account function from the SecurityManager module instead.
This function could be removed in the next major release version.</xqdoc:deprecated></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>xmldb:created</xqdoc:name><xqdoc:signature>xmldb:created($collection-uri as xs:string) as xs:dateTime</xqdoc:signature><xqdoc:comment><xqdoc:description>Returns the creation date of the collection $collection-uri. Collection URIs can be specified either as a simple collection path or an XMLDB URI.</xqdoc:description><xqdoc:param>$collection-uri The collection URI</xqdoc:param><xqdoc:return>xs:dateTime : the creation date</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>xmldb:created</xqdoc:name><xqdoc:signature>xmldb:created($collection-uri as xs:string, $resource as xs:string) as xs:dateTime</xqdoc:signature><xqdoc:comment><xqdoc:description>Returns the creation date of the resource $resource in $collection-uri. Collection URIs can be specified either as a simple collection path or an XMLDB URI.</xqdoc:description><xqdoc:param>$collection-uri The collection URI</xqdoc:param><xqdoc:param>$resource The resource</xqdoc:param><xqdoc:return>xs:dateTime : the creation date</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>xmldb:decode</xqdoc:name><xqdoc:signature>xmldb:decode($string as xs:string) as xs:string</xqdoc:signature><xqdoc:comment><xqdoc:description>Decodes the string $string such that any percent encoded octets will be translated to their decoded UTF-8 representation.</xqdoc:description><xqdoc:param>$string The input string</xqdoc:param><xqdoc:return>xs:string : the decoded string</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>xmldb:decode-uri</xqdoc:name><xqdoc:signature>xmldb:decode-uri($uri as xs:anyURI) as xs:string</xqdoc:signature><xqdoc:comment><xqdoc:description>Decodes the URI $uri such that any percent encoded octets will be translated to their decoded UTF-8 representation.</xqdoc:description><xqdoc:param>$uri The URI</xqdoc:param><xqdoc:return>xs:string : the decoded $uri as xs:string</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>xmldb:defragment</xqdoc:name><xqdoc:signature>xmldb:defragment($nodes as node()+) as item()</xqdoc:signature><xqdoc:comment><xqdoc:description>Start a defragmentation run on each document which has a node in $nodes. Fragmentation may occur if nodes are inserted into a document using XQuery update extensions. Please note that defragmenting a document changes its internal structure, so any references to this document will become invalid, in particular, variables pointing to some nodes in the document.</xqdoc:description><xqdoc:param>$nodes+ The sequence of nodes from the documents to defragment</xqdoc:param><xqdoc:return>item()</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>xmldb:defragment</xqdoc:name><xqdoc:signature>xmldb:defragment($nodes as node()+, $integer as xs:integer) as item()</xqdoc:signature><xqdoc:comment><xqdoc:description>Start a defragmentation run on each document which has a node in $nodes. Fragmentation may occur if nodes are inserted into a document using XQuery update extensions. The second argument specifies the minimum number of fragmented pages which should be in a document before it is considered for defragmentation. Please note that defragmenting a document changes its internal structure, so any references to this document will become invalid, in particular, variables pointing to some nodes in the document.</xqdoc:description><xqdoc:param>$nodes+ The sequence of nodes from the documents to defragment</xqdoc:param><xqdoc:param>$integer The minimum number of fragmented pages required before defragmenting</xqdoc:param><xqdoc:return>item()</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>xmldb:delete-user</xqdoc:name><xqdoc:signature>xmldb:delete-user($user-id as xs:string) as item()</xqdoc:signature><xqdoc:comment><xqdoc:description>Deletes an existing user, $user-id, in the database. This does not delete the user's home collection. The XQuery owner must have appropriate privileges to do this, e.g. having DBA role, and not being the owner of the currently running XQuery. You cannot delete the owner of the currently running XQuery.</xqdoc:description><xqdoc:param>$user-id The user-id to delete</xqdoc:param><xqdoc:return>item()</xqdoc:return><xqdoc:deprecated>Moved to the module: http://exist-db.org/xquery/securitymanager, you should now use 'sm:remove-account' instead!
This function could be removed in the next major release version.</xqdoc:deprecated></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>xmldb:document</xqdoc:name><xqdoc:signature>xmldb:document($document-uris as xs:string+) as node()*</xqdoc:signature><xqdoc:comment><xqdoc:description>Returns the documents $document-uris in the input sequence. Collection URIs can be specified either as a simple collection path or an XMLDB URI.If the input sequence is empty, the function will load all documents in the database.</xqdoc:description><xqdoc:param>$document-uris+ The document URIs</xqdoc:param><xqdoc:return>node()* : the documents</xqdoc:return><xqdoc:deprecated>See the standard fn:doc() function
This function could be removed in the next major release version.</xqdoc:deprecated></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>xmldb:document-has-lock</xqdoc:name><xqdoc:signature>xmldb:document-has-lock($collection-uri as xs:string, $resource as xs:string) as xs:string?</xqdoc:signature><xqdoc:comment><xqdoc:description>Returns the user-id of the user that holds a write lock on the resource $resource in the collection $collection-uri.  If no lock is in place, the empty sequence is returned. Collection URIs can be specified either as a simple collection path or an XMLDB URI.</xqdoc:description><xqdoc:param>$collection-uri The collection URI</xqdoc:param><xqdoc:param>$resource The resource</xqdoc:param><xqdoc:return>xs:string? : the user id of the lock owner, otherwise if not locked the empty sequence</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>xmldb:encode</xqdoc:name><xqdoc:signature>xmldb:encode($string as xs:string) as xs:string</xqdoc:signature><xqdoc:comment><xqdoc:description>Encodes the string $string such that it will be a valid collection or resource path. Provides similar functionality to java's URLEncoder.encode() function, with some enhancements.</xqdoc:description><xqdoc:param>$string The input string</xqdoc:param><xqdoc:return>xs:string : the URL encoded string</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>xmldb:encode-uri</xqdoc:name><xqdoc:signature>xmldb:encode-uri($string as xs:string) as xs:anyURI</xqdoc:signature><xqdoc:comment><xqdoc:description>Encodes the string $string such that it will be a valid collection or resource path. Provides similar functionality to java's URLEncoder.encode() function, with some enhancements. Returns an xs:anyURI object representing a valid XmldbURI</xqdoc:description><xqdoc:param>$string The input string</xqdoc:param><xqdoc:return>xs:anyURI : the XmldbURI encoded from $string</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>xmldb:exists-user</xqdoc:name><xqdoc:signature>xmldb:exists-user($user-id as xs:string) as xs:boolean</xqdoc:signature><xqdoc:comment><xqdoc:description>Returns true if the user $user-id exists.</xqdoc:description><xqdoc:param>$user-id The user-id</xqdoc:param><xqdoc:return>xs:boolean : true() if the user exists, false() otherwise</xqdoc:return><xqdoc:deprecated>Moved to the module: http://exist-db.org/xquery/securitymanager, you should now use 'sm:user-exists' instead!
This function could be removed in the next major release version.</xqdoc:deprecated></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>xmldb:find-last-modified-since</xqdoc:name><xqdoc:signature>xmldb:find-last-modified-since($node-set as node()*, $since as xs:dateTime) as node()?</xqdoc:signature><xqdoc:comment><xqdoc:description>Filters the given node set to only include nodes from resources which were modified since the specified date time.</xqdoc:description><xqdoc:param>$node-set* A node set</xqdoc:param><xqdoc:param>$since Date</xqdoc:param><xqdoc:return>node()? : the mime-type if available, otherwise the empty sequence</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>xmldb:get-child-collections</xqdoc:name><xqdoc:signature>xmldb:get-child-collections($collection-uri as xs:string) as xs:string*</xqdoc:signature><xqdoc:comment><xqdoc:description>Returns the names of the child collections in the collection $collection-uri. Collection URIs can be specified either as a simple collection path or an XMLDB URI.</xqdoc:description><xqdoc:param>$collection-uri The collection URI</xqdoc:param><xqdoc:return>xs:string* : the sequence of child collection names</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>xmldb:get-child-resources</xqdoc:name><xqdoc:signature>xmldb:get-child-resources($collection-uri as item()) as xs:string*</xqdoc:signature><xqdoc:comment><xqdoc:description>Returns the names of the child resources in collection $collection-uri. Collection URIs can be specified either as a simple collection path or an XMLDB URI.</xqdoc:description><xqdoc:param>$collection-uri The collection URI</xqdoc:param><xqdoc:return>xs:string* : the sequence of resource names</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>xmldb:get-current-user</xqdoc:name><xqdoc:signature>xmldb:get-current-user() as xs:string</xqdoc:signature><xqdoc:comment><xqdoc:description>Returns the user-id of the current user from the xquery context.</xqdoc:description><xqdoc:return>xs:string : the user-id of the current user</xqdoc:return><xqdoc:deprecated>Moved to the module: http://exist-db.org/xquery/securitymanager, you should now use 'sm:id' instead!
This function could be removed in the next major release version.</xqdoc:deprecated></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>xmldb:get-current-user-attribute</xqdoc:name><xqdoc:signature>xmldb:get-current-user-attribute($name as xs:string) as xs:string?</xqdoc:signature><xqdoc:comment><xqdoc:description>Returns the attribute of the current user account.</xqdoc:description><xqdoc:param>$name The name of the user attribute</xqdoc:param><xqdoc:return>xs:string? : the attribute value of the current user</xqdoc:return><xqdoc:deprecated>Moved to the module: http://exist-db.org/xquery/securitymanager, you should now use 'sm:get-account-metadata' instead!
This function could be removed in the next major release version.</xqdoc:deprecated></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>xmldb:get-current-user-attribute-names</xqdoc:name><xqdoc:signature>xmldb:get-current-user-attribute-names() as xs:string*</xqdoc:signature><xqdoc:comment><xqdoc:description>Returns the names of the attributes of the current user.</xqdoc:description><xqdoc:return>xs:string* : the attribute names of the current user</xqdoc:return><xqdoc:deprecated>Moved to the module: http://exist-db.org/xquery/securitymanager, you should now use 'sm:get-account-metadata-keys' instead!
This function could be removed in the next major release version.</xqdoc:deprecated></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>xmldb:get-group</xqdoc:name><xqdoc:signature>xmldb:get-group($collection-uri as xs:string) as xs:string?</xqdoc:signature><xqdoc:comment><xqdoc:description>Returns the owner group of the collection $collection-uri. Collection URIs can be specified either as a simple collection path or an XMLDB URI.</xqdoc:description><xqdoc:param>$collection-uri The collection URI</xqdoc:param><xqdoc:return>xs:string? : the owner group</xqdoc:return><xqdoc:deprecated>Moved to the module: http://exist-db.org/xquery/securitymanager, you should now use 'sm:get-permissions' instead!
This function could be removed in the next major release version.</xqdoc:deprecated></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>xmldb:get-group</xqdoc:name><xqdoc:signature>xmldb:get-group($collection-uri as xs:string, $resource as xs:string) as xs:string?</xqdoc:signature><xqdoc:comment><xqdoc:description>Returns the owner group of the resource $resource in the collection $collection-uri. Collection URIs can be specified either as a simple collection path or an XMLDB URI.</xqdoc:description><xqdoc:param>$collection-uri The collection URI</xqdoc:param><xqdoc:param>$resource The resource</xqdoc:param><xqdoc:return>xs:string? : the owner group</xqdoc:return><xqdoc:deprecated>Moved to the module: http://exist-db.org/xquery/securitymanager, you should now use 'sm:get-permissions' instead!
This function could be removed in the next major release version.</xqdoc:deprecated></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>xmldb:get-mime-type</xqdoc:name><xqdoc:signature>xmldb:get-mime-type($resource-uri as xs:anyURI) as xs:string?</xqdoc:signature><xqdoc:comment><xqdoc:description>Returns the MIME type if available of the resource $resource-uri, otherwise the empty sequence. Resource URIs can be specified either as a simple collection path, an XMLDB URI or any URI.</xqdoc:description><xqdoc:param>$resource-uri The resource URI</xqdoc:param><xqdoc:return>xs:string? : the mime-type if available, otherwise the empty sequence</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>xmldb:get-owner</xqdoc:name><xqdoc:signature>xmldb:get-owner($collection-uri as item()) as xs:string?</xqdoc:signature><xqdoc:comment><xqdoc:description>Returns the owner user-id of the collection $collection-uri. Collection URIs can be specified either as a simple collection path or an XMLDB URI.</xqdoc:description><xqdoc:param>$collection-uri The collection URI</xqdoc:param><xqdoc:return>xs:string? : the user-id</xqdoc:return><xqdoc:deprecated>Moved to the module: http://exist-db.org/xquery/securitymanager, you should now use 'sm:get-permissions' instead!
This function could be removed in the next major release version.</xqdoc:deprecated></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>xmldb:get-owner</xqdoc:name><xqdoc:signature>xmldb:get-owner($collection-uri as item(), $resource as xs:string) as xs:string?</xqdoc:signature><xqdoc:comment><xqdoc:description>Returns the owner user-id of the resource $resource in collection $collection-uri. Collection URIs can be specified either as a simple collection path or an XMLDB URI.</xqdoc:description><xqdoc:param>$collection-uri The collection URI</xqdoc:param><xqdoc:param>$resource The resource</xqdoc:param><xqdoc:return>xs:string? : the user-id</xqdoc:return><xqdoc:deprecated>Moved to the module: http://exist-db.org/xquery/securitymanager, you should now use 'sm:get-permissions' instead!
This function could be removed in the next major release version.</xqdoc:deprecated></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>xmldb:get-permissions</xqdoc:name><xqdoc:signature>xmldb:get-permissions($collection-uri as xs:string) as xs:int?</xqdoc:signature><xqdoc:comment><xqdoc:description>Returns the permissions assigned to the collection $collection-uri. Collection URIs can be specified either as a simple collection path or an XMLDB URI.</xqdoc:description><xqdoc:param>$collection-uri The collection-uri</xqdoc:param><xqdoc:return>xs:int? : the collection permissions</xqdoc:return><xqdoc:deprecated>Moved to the module: http://exist-db.org/xquery/securitymanager, you should now use 'sm:get-permissions' instead!
This function could be removed in the next major release version.</xqdoc:deprecated></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>xmldb:get-permissions</xqdoc:name><xqdoc:signature>xmldb:get-permissions($collection-uri as xs:string, $resource as xs:string) as xs:int?</xqdoc:signature><xqdoc:comment><xqdoc:description>Returns the permissions assigned to the resource $resource in collection $collection-uri. Collection URIs can be specified either as a simple collection path or an XMLDB URI.</xqdoc:description><xqdoc:param>$collection-uri The collection-uri</xqdoc:param><xqdoc:param>$resource The resource</xqdoc:param><xqdoc:return>xs:int? : the resource permissions</xqdoc:return><xqdoc:deprecated>Moved to the module: http://exist-db.org/xquery/securitymanager, you should now use 'sm:get-permissions' instead!
This function could be removed in the next major release version.</xqdoc:deprecated></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>xmldb:get-user-groups</xqdoc:name><xqdoc:signature>xmldb:get-user-groups($user-id as xs:string) as xs:string+</xqdoc:signature><xqdoc:comment><xqdoc:description>Returns the sequence of groups the user $user-id is a member of.</xqdoc:description><xqdoc:param>$user-id The user-id</xqdoc:param><xqdoc:return>xs:string+ : the group memberships</xqdoc:return><xqdoc:deprecated>Moved to the module: http://exist-db.org/xquery/securitymanager, you should now use 'sm:get-user-groups' instead!
This function could be removed in the next major release version.</xqdoc:deprecated></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>xmldb:get-user-home</xqdoc:name><xqdoc:signature>xmldb:get-user-home($user-id as xs:string) as xs:anyURI?</xqdoc:signature><xqdoc:comment><xqdoc:description>Returns the user's home collection URI or the empty sequence if no home collection is assigned to the user $user-id.</xqdoc:description><xqdoc:param>$user-id The user-id</xqdoc:param><xqdoc:return>xs:anyURI? : the home collection URI of user $user-id if one is assigned, otherwise the empty sequence</xqdoc:return><xqdoc:deprecated>Users do not have home collections since 2.0. Will return /db.
This function could be removed in the next major release version.</xqdoc:deprecated></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>xmldb:get-user-primary-group</xqdoc:name><xqdoc:signature>xmldb:get-user-primary-group($user-id as xs:string) as xs:string</xqdoc:signature><xqdoc:comment><xqdoc:description>Returns the user's primary group.</xqdoc:description><xqdoc:param>$user-id The user-id</xqdoc:param><xqdoc:return>xs:string : The Primary Group of the User</xqdoc:return><xqdoc:deprecated>Moved to the module: http://exist-db.org/xquery/securitymanager, you should now use 'sm:get-user-primary-group' instead!
This function could be removed in the next major release version.</xqdoc:deprecated></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>xmldb:get-users</xqdoc:name><xqdoc:signature>xmldb:get-users($group-name as xs:string) as xs:string*</xqdoc:signature><xqdoc:comment><xqdoc:description>Returns the list of users in the group</xqdoc:description><xqdoc:param>$group-name The group-name</xqdoc:param><xqdoc:return>xs:string* : The list of users in the group identified by $group-name</xqdoc:return><xqdoc:deprecated>Moved to the module: http://exist-db.org/xquery/securitymanager, you should now use 'sm:get-group-members' instead!
This function could be removed in the next major release version.</xqdoc:deprecated></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>xmldb:group-exists</xqdoc:name><xqdoc:signature>xmldb:group-exists($group as xs:string) as xs:boolean</xqdoc:signature><xqdoc:comment><xqdoc:description>Determines whether a group exists. $group is the group name, The current user must have permission to access the group, i.e. be a member of the group or DBA</xqdoc:description><xqdoc:param>$group The group name</xqdoc:param><xqdoc:return>xs:boolean : true() or false() indicating the outcome of the operation</xqdoc:return><xqdoc:deprecated>Moved to the module: http://exist-db.org/xquery/securitymanager, you should now use 'sm:group-exists' instead!
This function could be removed in the next major release version.</xqdoc:deprecated></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>xmldb:is-admin-user</xqdoc:name><xqdoc:signature>xmldb:is-admin-user($user-id as xs:string) as xs:boolean?</xqdoc:signature><xqdoc:comment><xqdoc:description>Returns true() if user $user-id has DBA role, false() otherwise.</xqdoc:description><xqdoc:param>$user-id The user-id</xqdoc:param><xqdoc:return>xs:boolean? : true() if user has DBA role, false() otherwise</xqdoc:return><xqdoc:deprecated>Moved to the module: http://exist-db.org/xquery/securitymanager, you should now use 'sm:is-dba' instead!
This function could be removed in the next major release version.</xqdoc:deprecated></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>xmldb:is-authenticated</xqdoc:name><xqdoc:signature>xmldb:is-authenticated() as xs:boolean</xqdoc:signature><xqdoc:comment><xqdoc:description>Returns the true() if current user from the xquery context is authenticated, false() otherwise.</xqdoc:description><xqdoc:return>xs:boolean : true() if user from the xquery context is authenticated, false() otherwise</xqdoc:return><xqdoc:deprecated>Moved to the module: http://exist-db.org/xquery/securitymanager, you should now use 'sm:is-authenticated' instead!
This function could be removed in the next major release version.</xqdoc:deprecated></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>xmldb:last-modified</xqdoc:name><xqdoc:signature>xmldb:last-modified($collection-uri as item(), $resource as xs:string) as xs:dateTime?</xqdoc:signature><xqdoc:comment><xqdoc:description>Returns the last-modification date of resource $resource in collection $collection-uri. Collection URIs can be specified either as a simple collection path or an XMLDB URI.</xqdoc:description><xqdoc:param>$collection-uri The collection URI</xqdoc:param><xqdoc:param>$resource The resource</xqdoc:param><xqdoc:return>xs:dateTime? : the last modification date</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>xmldb:login</xqdoc:name><xqdoc:signature>xmldb:login($collection-uri as xs:string, $user-id as xs:string?, $password as xs:string?) as xs:boolean</xqdoc:signature><xqdoc:comment><xqdoc:description>Login the user, $user-id, and set it as the owner of the currently executing XQuery. Collection URIs can be specified either as a simple collection path or an XMLDB URI. It returns true if the authentication succeeds, false otherwise. If called from a HTTP context the login is cached for the lifetime of the HTTP session and may be used for any XQuery run in that session. If an HTTP session does not already exist, none will be created.</xqdoc:description><xqdoc:param>$collection-uri The collection URI</xqdoc:param><xqdoc:param>$user-id? The user-id</xqdoc:param><xqdoc:param>$password? The password</xqdoc:param><xqdoc:return>xs:boolean : true() on successful authentication and owner elevation, false() otherwise</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>xmldb:login</xqdoc:name><xqdoc:signature>xmldb:login($collection-uri as xs:string, $user-id as xs:string?, $password as xs:string?, $create-session as xs:boolean?) as xs:boolean</xqdoc:signature><xqdoc:comment><xqdoc:description>Login the user, $user-id, and set it as the owner of the currently executing XQuery. Collection URIs can be specified either as a simple collection path or an XMLDB URI. It returns true() if the authentication succeeds, false() otherwise. If called from a HTTP context the login is cached for the lifetime of the HTTP session and may be used for any XQueryrun in that session. $create-session specifies whether to create an HTTP session on successful authentication or not. If $create-session is false() or the empty sequence no session will be created if one does not already exist.</xqdoc:description><xqdoc:param>$collection-uri The collection URI</xqdoc:param><xqdoc:param>$user-id? The user-id</xqdoc:param><xqdoc:param>$password? The password</xqdoc:param><xqdoc:param>$create-session? whether to create the session or not on successful authentication, default false()</xqdoc:param><xqdoc:return>xs:boolean : true() on successful authentication and owner elevation, false() otherwise</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>xmldb:match-collection</xqdoc:name><xqdoc:signature>xmldb:match-collection($regexp as xs:string) as xs:string*</xqdoc:signature><xqdoc:comment><xqdoc:description>Looks for collection names in the collection index that match the provided regexp</xqdoc:description><xqdoc:param>$regexp The expression to use for matching collection names</xqdoc:param><xqdoc:return>xs:string* : The names of the collections that match the expression</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>xmldb:move</xqdoc:name><xqdoc:signature>xmldb:move($source-collection-uri as xs:string, $target-collection-uri as xs:string) as item()</xqdoc:signature><xqdoc:comment><xqdoc:description>Moves the collection $source-collection-uri into the collection $target-collection-uri. Collection URIs can be specified either as a simple collection path or an XMLDB URI.</xqdoc:description><xqdoc:param>$source-collection-uri The source collection URI</xqdoc:param><xqdoc:param>$target-collection-uri The target collection URI</xqdoc:param><xqdoc:return>item()</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>xmldb:move</xqdoc:name><xqdoc:signature>xmldb:move($source-collection-uri as xs:string, $target-collection-uri as xs:string, $resource as xs:string) as item()</xqdoc:signature><xqdoc:comment><xqdoc:description>Moves the resource $resource from the collection $source-collection-uri into collection $target-collection-uri. Collection URIs can be specified either as a simple collection path or an XMLDB URI.</xqdoc:description><xqdoc:param>$source-collection-uri The source collection URI</xqdoc:param><xqdoc:param>$target-collection-uri The target collection URI</xqdoc:param><xqdoc:param>$resource The resource</xqdoc:param><xqdoc:return>item()</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>xmldb:permissions-to-string</xqdoc:name><xqdoc:signature>xmldb:permissions-to-string($permissions as xs:integer) as xs:string?</xqdoc:signature><xqdoc:comment><xqdoc:description>Formats the resource or collection permissions, $permissions, passed as an integer value into a string. The returned string shows the permissions following the Unix conventions, i.e. all permissions set is returned as rwxrwxrwx, where the first three chars are for user permissions, followed by group and other users. 'r' denotes read, 'w' write and 'u' update permissions.</xqdoc:description><xqdoc:param>$permissions The permissions in xs:integer format</xqdoc:param><xqdoc:return>xs:string? : the permissions as string 'rwu' for, user, group and other</xqdoc:return><xqdoc:deprecated>Moved to the module: http://exist-db.org/xquery/securitymanager, you should now use 'sm:octal-to-mode' instead!
This function could be removed in the next major release version.</xqdoc:deprecated></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>xmldb:register-database</xqdoc:name><xqdoc:signature>xmldb:register-database($driver as xs:string, $create-db as xs:boolean) as xs:boolean</xqdoc:signature><xqdoc:comment><xqdoc:description>Registers an XMLDB driver class with the XMLDB Database Manager. This is only required if you want to access a database instance different from the one that executes the XQuery.</xqdoc:description><xqdoc:param>$driver The DB driver</xqdoc:param><xqdoc:param>$create-db The flag to create the db if it does not exist</xqdoc:param><xqdoc:return>xs:boolean : true() if successfully registered, false() otherwise</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>xmldb:reindex</xqdoc:name><xqdoc:signature>xmldb:reindex($collection-uri as xs:string) as xs:boolean</xqdoc:signature><xqdoc:comment><xqdoc:description>Reindex collection $collection-uri. Collection URIs can be specified either as a simple collection path or an XMLDB URI. The XQuery owner must have appropriate privileges to do this, e.g. having DBA role.</xqdoc:description><xqdoc:param>$collection-uri The collection URI</xqdoc:param><xqdoc:return>xs:boolean : true() if successfully reindexed, false() otherwise</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>xmldb:remove</xqdoc:name><xqdoc:signature>xmldb:remove($collection-uri as xs:string) as item()</xqdoc:signature><xqdoc:comment><xqdoc:description>Removes the collection $collection-uri and its contents from the database. Collection URIs can be specified either as a simple collection path or an XMLDB URI.</xqdoc:description><xqdoc:param>$collection-uri The collection URI</xqdoc:param><xqdoc:return>item()</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>xmldb:remove</xqdoc:name><xqdoc:signature>xmldb:remove($collection-uri as xs:string, $resource as xs:string) as item()</xqdoc:signature><xqdoc:comment><xqdoc:description>Removes the resource $resource from the collection $collection-uri. Collection URIs can be specified either as a simple collection path or an XMLDB URI.</xqdoc:description><xqdoc:param>$collection-uri The collection URI</xqdoc:param><xqdoc:param>$resource The resource</xqdoc:param><xqdoc:return>item()</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>xmldb:remove-user-from-group</xqdoc:name><xqdoc:signature>xmldb:remove-user-from-group($user as xs:string, $group as xs:string) as xs:boolean</xqdoc:signature><xqdoc:comment><xqdoc:description>Remove a user from a group. $user is the username. $group is the group nameThe XQuery owner must have appropriate privileges to do this, e.g. having DBA role.</xqdoc:description><xqdoc:param>$user The user name</xqdoc:param><xqdoc:param>$group The group name</xqdoc:param><xqdoc:return>xs:boolean : true() or false() indicating the outcome of the operation</xqdoc:return><xqdoc:deprecated>Moved to the module: http://exist-db.org/xquery/securitymanager, you should now use 'sm:remove-group-member' instead!
This function could be removed in the next major release version.</xqdoc:deprecated></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>xmldb:rename</xqdoc:name><xqdoc:signature>xmldb:rename($source-collection-uri as xs:string, $new-collection-name as xs:string) as item()</xqdoc:signature><xqdoc:comment><xqdoc:description>Renames the collection $source-collection-uri with new name $new-collection-name. Collection URIs can be specified either as a simple collection path or an XMLDB URI.</xqdoc:description><xqdoc:param>$source-collection-uri The source collection URI</xqdoc:param><xqdoc:param>$new-collection-name The new collection name</xqdoc:param><xqdoc:return>item()</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>xmldb:rename</xqdoc:name><xqdoc:signature>xmldb:rename($collection-uri as xs:string, $resource as xs:string, $new-resource-name as xs:string) as item()</xqdoc:signature><xqdoc:comment><xqdoc:description>Renames the resource $resource in collection $collection-uri with new name $new-resource-name. Collection URIs can be specified either as a simple collection path or an XMLDB URI.</xqdoc:description><xqdoc:param>$collection-uri The collection URI</xqdoc:param><xqdoc:param>$resource The resource</xqdoc:param><xqdoc:param>$new-resource-name The new resource name</xqdoc:param><xqdoc:return>item()</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>xmldb:set-collection-permissions</xqdoc:name><xqdoc:signature>xmldb:set-collection-permissions($collection-uri as xs:string, $user-id as xs:string, $group-id as xs:string, $permissions as xs:integer) as item()</xqdoc:signature><xqdoc:comment><xqdoc:description>Sets the permissions of the collection $collection-uri. Collection URIs can be specified either as a simple collection path or an XMLDB URI. $user-id specifies the user which will become the owner of the resource, $group-id the group, and $permissons the permissions as an xs:integer value. PLEASE REMEMBER that octal number 0755 is 7*64+5*8+5 i.e. 493 in decimal NOT 755. You can use util:base-to-integer(0755, 8) as argument for convenience.</xqdoc:description><xqdoc:param>$collection-uri The collection URI</xqdoc:param><xqdoc:param>$user-id The user-id</xqdoc:param><xqdoc:param>$group-id The group-id</xqdoc:param><xqdoc:param>$permissions The permissions</xqdoc:param><xqdoc:return>item()</xqdoc:return><xqdoc:deprecated>You should use sm:chown and sm:chmod from the SecurityManager Module instead.
This function could be removed in the next major release version.</xqdoc:deprecated></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>xmldb:set-mime-type</xqdoc:name><xqdoc:signature>xmldb:set-mime-type($resource-uri as xs:anyURI, $mime-type as xs:string?) as empty()</xqdoc:signature><xqdoc:comment><xqdoc:description>Set the MIME type of the resource $resource-uri.Resource URIs can be specified either as a simple collection path, an XMLDB URI or any URI.</xqdoc:description><xqdoc:param>$resource-uri The resource URI</xqdoc:param><xqdoc:param>$mime-type? The new mime-type, use empty sequence to set default value.</xqdoc:param><xqdoc:return>empty()</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>xmldb:set-resource-permissions</xqdoc:name><xqdoc:signature>xmldb:set-resource-permissions($collection-uri as xs:string, $resource as xs:string, $user-id as xs:string, $group-id as xs:string, $permissions as xs:integer) as item()</xqdoc:signature><xqdoc:comment><xqdoc:description>Sets the permissions of the resource $resource in collection $collection-uri. Collection URIs can be specified either as a simple collection path or an XMLDB URI. $user-id specifies the user which will become the owner of the resource, $group-id the group, and  $permissions the permissions as an xs:integer value. PLEASE REMEMBER that octal number 0755 is 7*64+5*8+5 i.e. 493 in decimal NOT 755. You can use util:base-to-integer(0755, 8) as argument for convenience.</xqdoc:description><xqdoc:param>$collection-uri The collection URI</xqdoc:param><xqdoc:param>$resource The resource</xqdoc:param><xqdoc:param>$user-id The user-id</xqdoc:param><xqdoc:param>$group-id The group-id</xqdoc:param><xqdoc:param>$permissions The permissions</xqdoc:param><xqdoc:return>item()</xqdoc:return><xqdoc:deprecated>You should use sm:chown and sm:chmod from the SecurityManager Module instead.
This function could be removed in the next major release version.</xqdoc:deprecated></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>xmldb:size</xqdoc:name><xqdoc:signature>xmldb:size($collection-uri as xs:string, $resource as xs:string) as xs:long</xqdoc:signature><xqdoc:comment><xqdoc:description>Returns the estimated size of the resource $resource (in bytes) in the collection $collection-uri. The estimation is based on the number of pages occupied by the resource. If the document is serialized back to a string, its size may be different, since parts of the structural information are stored in compressed form. Collection URIs can be specified either as a simple collection path or an XMLDB URI.</xqdoc:description><xqdoc:param>$collection-uri The collection URI</xqdoc:param><xqdoc:param>$resource The resource</xqdoc:param><xqdoc:return>xs:long : the size of the pages, occupied by the resource, in bytes</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>xmldb:store</xqdoc:name><xqdoc:signature>xmldb:store($collection-uri as xs:string, $resource-name as xs:string?, $contents as item()) as xs:string?</xqdoc:signature><xqdoc:comment><xqdoc:description>Stores a new resource into the database. The resource is stored  in the collection $collection-uri with the name $resource-name. Collection URIs can be specified either as a simple collection path or an XMLDB URI. The contents $contents, is either a node, an xs:string, a Java file object or an xs:anyURI. A node will be serialized to SAX. It becomes the root node of the new document. If $contents is of type xs:anyURI, the resource is loaded from that URI. Returns the path to the new document if successfully stored, otherwise an XPathException is thrown.</xqdoc:description><xqdoc:param>$collection-uri The collection URI</xqdoc:param><xqdoc:param>$resource-name? The resource name</xqdoc:param><xqdoc:param>$contents The contents</xqdoc:param><xqdoc:return>xs:string? : the path to new resource if sucessfully stored, otherwise the emtpty sequence</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>xmldb:store</xqdoc:name><xqdoc:signature>xmldb:store($collection-uri as xs:string, $resource-name as xs:string?, $contents as item(), $mime-type as xs:string) as xs:string?</xqdoc:signature><xqdoc:comment><xqdoc:description>Stores a new resource into the database. The resource is stored  in the collection $collection-uri with the name $resource-name. Collection URIs can be specified either as a simple collection path or an XMLDB URI. The contents $contents, is either a node, an xs:string, a Java file object or an xs:anyURI. A node will be serialized to SAX. It becomes the root node of the new document. If $contents is of type xs:anyURI, the resource is loaded from that URI. The final argument $mime-type is used to specify a mime type.  If the mime-type is not a xml based type, the resource will be stored as a binary resource.Returns the path to the new document if successfully stored, otherwise an XPathException is thrown.</xqdoc:description><xqdoc:param>$collection-uri The collection URI</xqdoc:param><xqdoc:param>$resource-name? The resource name</xqdoc:param><xqdoc:param>$contents The contents</xqdoc:param><xqdoc:param>$mime-type The mime type</xqdoc:param><xqdoc:return>xs:string? : the path to new resource if sucessfully stored, otherwise the emtpty sequence</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>xmldb:store-files-from-pattern</xqdoc:name><xqdoc:signature>xmldb:store-files-from-pattern($collection-uri as xs:string, $directory as xs:string, $pattern as xs:string+) as xs:string*</xqdoc:signature><xqdoc:comment><xqdoc:description>Stores new resources into the database. Resources are read from the server's file system, using file patterns. The function returns a sequence of all document paths added to the db. These can be directly passed to fn:doc() to retrieve the document(s).</xqdoc:description><xqdoc:param>$collection-uri The collection-uri where resources should be stored. Collection URIs can be specified either as a simple collection path or an XMLDB URI.</xqdoc:param><xqdoc:param>$directory The directory in the file system from where the files are read.</xqdoc:param><xqdoc:param>$pattern+ The file matching pattern. Based on code from Apache's Ant, thus following the same conventions. For example: *.xml matches any file ending with .xml in the current directory, **/*.xml matches files in any directory below the current one</xqdoc:param><xqdoc:return>xs:string* : the sequence of document paths</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>xmldb:store-files-from-pattern</xqdoc:name><xqdoc:signature>xmldb:store-files-from-pattern($collection-uri as xs:string, $directory as xs:string, $pattern as xs:string+, $mime-type as xs:string?) as xs:string*</xqdoc:signature><xqdoc:comment><xqdoc:description>Stores new resources into the database. Resources are read from the server's file system, using file patterns. The function returns a sequence of all document paths added to the db. These can be directly passed to fn:doc() to retrieve the document(s).</xqdoc:description><xqdoc:param>$collection-uri The collection-uri where resources should be stored. Collection URIs can be specified either as a simple collection path or an XMLDB URI.</xqdoc:param><xqdoc:param>$directory The directory in the file system from where the files are read.</xqdoc:param><xqdoc:param>$pattern+ The file matching pattern. Based on code from Apache's Ant, thus following the same conventions. For example: *.xml matches any file ending with .xml in the current directory, **/*.xml matches files in any directory below the current one</xqdoc:param><xqdoc:param>$mime-type? If the mime-type is something other than 'text/xml' or 'application/xml', the resource will be stored as a binary resource.</xqdoc:param><xqdoc:return>xs:string* : the sequence of document paths</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>xmldb:store-files-from-pattern</xqdoc:name><xqdoc:signature>xmldb:store-files-from-pattern($collection-uri as xs:string, $directory as xs:string, $pattern as xs:string+, $mime-type as xs:string?, $preserve-structure as xs:boolean) as xs:string*</xqdoc:signature><xqdoc:comment><xqdoc:description>Stores new resources into the database. Resources are read from the server's file system, using file patterns. The function returns a sequence of all document paths added to the db. These can be directly passed to fn:doc() to retrieve the document(s).</xqdoc:description><xqdoc:param>$collection-uri The collection-uri where resources should be stored. Collection URIs can be specified either as a simple collection path or an XMLDB URI.</xqdoc:param><xqdoc:param>$directory The directory in the file system from where the files are read.</xqdoc:param><xqdoc:param>$pattern+ The file matching pattern. Based on code from Apache's Ant, thus following the same conventions. For example: *.xml matches any file ending with .xml in the current directory, **/*.xml matches files in any directory below the current one</xqdoc:param><xqdoc:param>$mime-type? If the mime-type is something other than 'text/xml' or 'application/xml', the resource will be stored as a binary resource.</xqdoc:param><xqdoc:param>$preserve-structure If preserve-structure is true(), the filesystem directory structure will be mirrored in the collection. Otherwise all the matching resources, including the ones in sub-directories, will be stored in the collection given in the first argument flatly.</xqdoc:param><xqdoc:return>xs:string* : the sequence of document paths</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>xmldb:store-files-from-pattern</xqdoc:name><xqdoc:signature>xmldb:store-files-from-pattern($collection-uri as xs:string, $directory as xs:string, $pattern as xs:string+, $mime-type as xs:string?, $preserve-structure as xs:boolean, $exclude as xs:string*) as xs:string*</xqdoc:signature><xqdoc:comment><xqdoc:description>Stores new resources into the database. Resources are read from the server's file system, using file patterns. The function returns a sequence of all document paths added to the db. These can be directly passed to fn:doc() to retrieve the document(s).</xqdoc:description><xqdoc:param>$collection-uri The collection-uri where resources should be stored. Collection URIs can be specified either as a simple collection path or an XMLDB URI.</xqdoc:param><xqdoc:param>$directory The directory in the file system from where the files are read.</xqdoc:param><xqdoc:param>$pattern+ The file matching pattern. Based on code from Apache's Ant, thus following the same conventions. For example: *.xml matches any file ending with .xml in the current directory, **/*.xml matches files in any directory below the current one</xqdoc:param><xqdoc:param>$mime-type? If the mime-type is something other than 'text/xml' or 'application/xml', the resource will be stored as a binary resource.</xqdoc:param><xqdoc:param>$preserve-structure If preserve-structure is true(), the filesystem directory structure will be mirrored in the collection. Otherwise all the matching resources, including the ones in sub-directories, will be stored in the collection given in the first argument flatly.</xqdoc:param><xqdoc:param>$exclude* A sequence of file patterns to exclude</xqdoc:param><xqdoc:return>xs:string* : the sequence of document paths</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>xmldb:string-to-permissions</xqdoc:name><xqdoc:signature>xmldb:string-to-permissions($permissions-string as xs:string) as xs:integer</xqdoc:signature><xqdoc:comment><xqdoc:description>Converts the resource or collection permissions, $permissions-string, into an integer representation suitable for use with set-permissions functions. The permissions string should be in the format 'rwxrwxrwx' where r is read, w is write and u is update.</xqdoc:description><xqdoc:param>$permissions-string The permissions string</xqdoc:param><xqdoc:return>xs:integer : The permissions integer</xqdoc:return><xqdoc:deprecated>Moved to the module: http://exist-db.org/xquery/securitymanager, you should now use 'sm:mode-to-octal' instead!
This function could be removed in the next major release version.</xqdoc:deprecated></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>xmldb:update</xqdoc:name><xqdoc:signature>xmldb:update($collection-uri as xs:string, $modifications as node()) as xs:integer</xqdoc:signature><xqdoc:comment><xqdoc:description>Processes an XUpdate request, $modifications, against a collection $collection-uri. Collection URIs can be specified either as a simple collection path or an XMLDB URI.The modifications are passed in a document conforming to the XUpdate specification. http://rx4rdf.liminalzone.org/xupdate-wd.html#N1a32e0The function returns the number of modifications caused by the XUpdate.</xqdoc:description><xqdoc:param>$collection-uri The collection URI</xqdoc:param><xqdoc:param>$modifications The XUpdate modifications to be processed</xqdoc:param><xqdoc:return>xs:integer : the number of modifications, as xs:integer, caused by the XUpdate</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>xmldb:xcollection</xqdoc:name><xqdoc:signature>xmldb:xcollection($collection-uris as xs:string+) as node()*</xqdoc:signature><xqdoc:comment><xqdoc:description>Returns the document nodes in the collections $collection-uris non-recursively, i.e. does not include document nodes found in sub-collections. C.f. fn:collection(). Collection URIs can be specified either as a simple collection path or an XMLDB URI.</xqdoc:description><xqdoc:param>$collection-uris+ The collection URIs</xqdoc:param><xqdoc:return>node()* : the document nodes from the specified collections excluding sub-collections</xqdoc:return></xqdoc:comment></xqdoc:function></xqdoc:functions></xqdoc:xqdoc>