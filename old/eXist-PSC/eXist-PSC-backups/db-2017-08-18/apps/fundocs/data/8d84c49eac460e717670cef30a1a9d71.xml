<?xml version="1.0" encoding="UTF-8"?>
<xqdoc:xqdoc xmlns:xqdoc="http://www.xqdoc.org/1.0"><xqdoc:control><xqdoc:date>2015-05-06T12:07:02.066-04:00</xqdoc:date><xqdoc:location>java:org.exist.xquery.functions.map.MapModule</xqdoc:location></xqdoc:control><xqdoc:module type="library"><xqdoc:uri>http://www.w3.org/2005/xpath-functions/map</xqdoc:uri><xqdoc:name>map</xqdoc:name><xqdoc:comment><xqdoc:description>Functions that operate on maps</xqdoc:description></xqdoc:comment></xqdoc:module><xqdoc:functions><xqdoc:function><xqdoc:name>map:new</xqdoc:name><xqdoc:signature>map:new() as map</xqdoc:signature><xqdoc:comment><xqdoc:description>Constructs and returns an empty map whose collation is the default collation in the static context.</xqdoc:description><xqdoc:return>map</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>map:new</xqdoc:name><xqdoc:signature>map:new($maps as map*) as map</xqdoc:signature><xqdoc:comment><xqdoc:description>Constructs and returns an empty map whose collation is the default collation in the static context.</xqdoc:description><xqdoc:param>$maps* Existing maps to combine into the new map.</xqdoc:param><xqdoc:return>map</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>map:new</xqdoc:name><xqdoc:signature>map:new($maps as map*, $collation as xs:string) as map</xqdoc:signature><xqdoc:comment><xqdoc:description>Constructs and returns an empty map whose collation is given in the second argument.</xqdoc:description><xqdoc:param>$maps* Existing maps to combine into the new map.</xqdoc:param><xqdoc:param>$collation The collation to use for the new map.</xqdoc:param><xqdoc:return>map</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>map:entry</xqdoc:name><xqdoc:signature>map:entry($key as xs:anyAtomicType, $value as item()*) as map</xqdoc:signature><xqdoc:comment><xqdoc:description>Creates a map that contains a single entry (a key-value pair).</xqdoc:description><xqdoc:param>$key The key</xqdoc:param><xqdoc:param>$value* The associated value</xqdoc:param><xqdoc:return>map</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>map:get</xqdoc:name><xqdoc:signature>map:get($map as map, $key as xs:anyAtomicType) as item()*</xqdoc:signature><xqdoc:comment><xqdoc:description>Returns the value associated with a supplied key in a given map.</xqdoc:description><xqdoc:param>$map The map</xqdoc:param><xqdoc:param>$key The key to look up</xqdoc:param><xqdoc:return>item()*</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>map:contains</xqdoc:name><xqdoc:signature>map:contains($map as map, $key as xs:anyAtomicType) as xs:boolean</xqdoc:signature><xqdoc:comment><xqdoc:description>Tests whether a supplied map contains an entry for a given key.</xqdoc:description><xqdoc:param>$map The map</xqdoc:param><xqdoc:param>$key The key to look up</xqdoc:param><xqdoc:return>xs:boolean</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>map:keys</xqdoc:name><xqdoc:signature>map:keys($map as map) as xs:anyAtomicType*</xqdoc:signature><xqdoc:comment><xqdoc:description>Returns a sequence containing all the key values present in a map.</xqdoc:description><xqdoc:param>$map The map</xqdoc:param><xqdoc:return>xs:anyAtomicType*</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>map:remove</xqdoc:name><xqdoc:signature>map:remove($map as map, $key as xs:string) as map</xqdoc:signature><xqdoc:comment><xqdoc:description>Constructs a new map by removing an entry from an existing map.</xqdoc:description><xqdoc:param>$map The map</xqdoc:param><xqdoc:param>$key The key to remove</xqdoc:param><xqdoc:return>map</xqdoc:return></xqdoc:comment></xqdoc:function><xqdoc:function><xqdoc:name>map:for-each-entry</xqdoc:name><xqdoc:signature>map:for-each-entry($input as map, $action as function) as item()*</xqdoc:signature><xqdoc:comment><xqdoc:description>takes any map as its $input argument and applies the supplied function to each entry in the map, in implementation-dependent order; the result is the sequence obtained by concatenating the results of these function calls. The function supplied as $action takes two arguments. It is called supplying the key of the map entry as the first argument, and the associated value as the second argument.</xqdoc:description><xqdoc:param>$input The map</xqdoc:param><xqdoc:param>$action The function to be called for each entry</xqdoc:param><xqdoc:return>item()*</xqdoc:return></xqdoc:comment></xqdoc:function></xqdoc:functions></xqdoc:xqdoc>